<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一叶轻舟渡万江</title>
  
  <subtitle>泰山不拒细壤故能成其高 江海不择细流故能就其深</subtitle>
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://github.com/carl-zk/blog/"/>
  <updated>2019-02-18T15:23:10.613Z</updated>
  <id>https://github.com/carl-zk/blog/</id>
  
  <author>
    <name>carl-zk</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Spring-Security</title>
    <link href="https://github.com/carl-zk/blog/2019/02/18/spring-security/"/>
    <id>https://github.com/carl-zk/blog/2019/02/18/spring-security/</id>
    <published>2019-02-18T12:15:22.000Z</published>
    <updated>2019-02-18T15:23:10.613Z</updated>
    
    <content type="html"><![CDATA[<p>好久不更新blog了，慵懒了！</p><blockquote><p>为了搞清楚 Spring Security 是如何工作了，特地翻了下源代码，查了许多文档，因为我比较在意细节，例如从何时起SS做认证(Authentication)，从何时做授权(Authorization)，如何定制SS。</p></blockquote><h3 id="Spring-Security-Filters"><a href="#Spring-Security-Filters" class="headerlink" title="Spring Security Filters"></a>Spring Security Filters</h3><p>Spring Security 框架主要利用 Filter 来实现对 HTTP 请求的认证和授权，掌握了 Filter 就弄明白了SS。</p><p>Spring Security 的所有 Filter 都放在 FilterChainProxy 的 <code>List&lt;SecurityFilterChain&gt;</code> 中，Spring-boot 启动时通过 SecurityFilterAutoConfiguration 自动注册 Spring Security’s Filter;</p><p><img src="/blog/2019/02/18/spring-security/flow.svg" alt></p><p>FilterChainProxy<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response,</span></span></span><br><span class="line"><span class="function"><span class="params">        FilterChain chain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> clearContext = request.getAttribute(FILTER_APPLIED) == <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (clearContext) &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            request.setAttribute(FILTER_APPLIED, Boolean.TRUE);</span><br><span class="line">            doFilterInternal(request, response, chain);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            SecurityContextHolder.clearContext();</span><br><span class="line">            request.removeAttribute(FILTER_APPLIED);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        doFilterInternal(request, response, chain);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可以看出 doFilterInternal(request, response, chain) 就包含了 Spring Security 的认证和授权，认证结果保存着 SecurityContextHolder中，FilterChain 结束后清除。</p><h4 id="Authentication"><a href="#Authentication" class="headerlink" title="Authentication"></a>Authentication</h4><p>AbstractAuthenticationProcessingFilter<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest req, ServletResponse res, FilterChain chain)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">        ...</span><br><span class="line"></span><br><span class="line">        Authentication authResult;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            authResult = attemptAuthentication(request, response);</span><br><span class="line">            <span class="keyword">if</span> (authResult == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 认证成功，依据session策略进行处理，默认无session</span></span><br><span class="line">            sessionStrategy.onAuthentication(authResult, request, response);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (AuthenticationException failed) &#123;</span><br><span class="line">            unsuccessfulAuthentication(request, response, failed);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// successfulAuthentication(request, response, chain, authResult);</span></span><br><span class="line"></span><br><span class="line">        SecurityContextHolder.getContext().setAuthentication(authResult);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记住认证结果，一般在 cookie 或 redis </span></span><br><span class="line">        rememberMeServices.loginSuccess(request, response, authResult);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Fire event</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.eventPublisher != <span class="keyword">null</span>) &#123;</span><br><span class="line">            eventPublisher.publishEvent(<span class="keyword">new</span> InteractiveAuthenticationSuccessEvent(</span><br><span class="line">                    authResult, <span class="keyword">this</span>.getClass()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 认证成功后，默认跳转到指定 target url</span></span><br><span class="line">        successHandler.onAuthenticationSuccess(request, response, authResult);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>attemptAuthentication(request, response) 需要子类具体实现认证过程，调用 this.getAuthenticationManager().authenticate(Authentication auth) 方法。<br>AuthenticationManager包含 <code>List&lt;AuthenticationProvider&gt;</code>, AuthenticationProvider 提供具体的认证过程。<br>概括一下就是 Filter 调用 AuthenticationManager 进行认证，认证成功后保存 Authentication 到 SecurityContextHolder。</p><h4 id="Authorization"><a href="#Authorization" class="headerlink" title="Authorization"></a>Authorization</h4><p>FilterSecurityInterceptor 是最后一个 SS Filter，一般情况下用户不需要DIY这部分，因为认证成功后会将 Principle (登录对象) 和 Roles 一同保存在 SecurityContextHolder 中，授权过程就成了根据 request 从 Map&lt;RequestMatcher, Collection<configattribute>&gt; 获取该 uri 所需角色列表，交给 AccessDecisionManager（类似的，它包含 <code>List&lt;AccessDecisionVoter&gt;</code>, 由 voter 投票） 来决定是否有权限访问，只要有一个 voter 不通过，则无权访问。</configattribute></p><p><a href="https://github.com/carl-zk/JavaJava/tree/master/security2">code</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好久不更新blog了，慵懒了！&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了搞清楚 Spring Security 是如何工作了，特地翻了下源代码，查了许多文档，因为我比较在意细节，例如从何时起SS做认证(Authentication)，从何时做授权(Authorizati
      
    
    </summary>
    
    
      <category term="spring" scheme="https://github.com/carl-zk/blog/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch</title>
    <link href="https://github.com/carl-zk/blog/2018/10/10/elasticsearch/"/>
    <id>https://github.com/carl-zk/blog/2018/10/10/elasticsearch/</id>
    <published>2018-10-10T01:34:33.000Z</published>
    <updated>2019-02-16T01:58:27.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="install-es-and-plugins"><a href="#install-es-and-plugins" class="headerlink" title="install es and plugins"></a>install es and plugins</h2><p><a href="https://www.elastic.co/downloads" target="_blank" rel="noopener">elasticsearch-6.4.1 download</a><br>plugin:<br><a href="https://www.elastic.co/guide/en/elasticsearch/plugins/6.0/analysis-smartcn.html" target="_blank" rel="noopener">analysis-smartcn</a> (eg: ./bin/elasticsearch-plugin install analysis-smartcn)<br><a href="https://github.com/medcl/elasticsearch-analysis-ik">ik</a></p><p>then start es: bin/elasticsearch</p><h2 id="surfing"><a href="#surfing" class="headerlink" title="surfing"></a>surfing</h2><h3 id="验证分词器是否生效"><a href="#验证分词器是否生效" class="headerlink" title="验证分词器是否生效"></a>验证分词器是否生效</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">curl --request POST \</span><br><span class="line">  --url http://localhost:9200/_analyze \</span><br><span class="line">  --header <span class="string">'Content-Type: application/json'</span>  -d \</span><br><span class="line"><span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "analyzer": "pinyin",</span></span><br><span class="line"><span class="string">    "text": "小明"</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="hibernate-search-elasticsearch"><a href="#hibernate-search-elasticsearch" class="headerlink" title="hibernate-search-elasticsearch"></a>hibernate-search-elasticsearch</h3><p><a href="https://github.com/carl-zk/JavaJava/tree/master/search-service">code</a></p><h3 id="config-index-and-mapping"><a href="#config-index-and-mapping" class="headerlink" title="config index and mapping"></a>config index and mapping</h3><ol><li><p>设置analyzer</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">curl --request PUT \</span><br><span class="line">  --url http://localhost:9200/com.wework.entity.company -d \</span><br><span class="line"><span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "index": &#123;</span></span><br><span class="line"><span class="string">        "analysis": &#123;</span></span><br><span class="line"><span class="string">        "analyzer": &#123;</span></span><br><span class="line"><span class="string">            "pinyin_analyzer": &#123;</span></span><br><span class="line"><span class="string">                "tokenizer": "my_pinyin"</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;,</span></span><br><span class="line"><span class="string">        "tokenizer": &#123;</span></span><br><span class="line"><span class="string">            "my_pinyin": &#123;</span></span><br><span class="line"><span class="string">                "type": "pinyin",</span></span><br><span class="line"><span class="string">                "keep_separate_first_letter" : false,</span></span><br><span class="line"><span class="string">                "keep_full_pinyin" : true,</span></span><br><span class="line"><span class="string">                "keep_original" : true,</span></span><br><span class="line"><span class="string">                "limit_first_letter_length" : 16,</span></span><br><span class="line"><span class="string">                "lowercase" : true,</span></span><br><span class="line"><span class="string">                "remove_duplicated_term" : true</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure></li><li><p>设置mapping</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">curl --request PUT \</span><br><span class="line">  --url http://localhost:9200/com.wework.entity.company/_mapping/com.wework.entity.Company -d \</span><br><span class="line"><span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "properties": &#123;</span></span><br><span class="line"><span class="string">        "name": &#123;</span></span><br><span class="line"><span class="string">            "type": "text",</span></span><br><span class="line"><span class="string">            "analyzer": "ik_smart",</span></span><br><span class="line"><span class="string">            "fields": &#123;</span></span><br><span class="line"><span class="string">                "pinyin": &#123;</span></span><br><span class="line"><span class="string">                    "type": "text",</span></span><br><span class="line"><span class="string">                    "store": false,</span></span><br><span class="line"><span class="string">                    "term_vector": "with_offsets",</span></span><br><span class="line"><span class="string">                    "analyzer": "pinyin_analyzer",</span></span><br><span class="line"><span class="string">                    "boost": 10</span></span><br><span class="line"><span class="string">                &#125;,</span></span><br><span class="line"><span class="string">                "keyword": &#123;</span></span><br><span class="line"><span class="string">                    "type": "keyword",</span></span><br><span class="line"><span class="string">                    "ignore_above": 256</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">            &#125;</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure></li><li><p>查看mapping</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --request GET \</span><br><span class="line">  --url http://localhost:9200/com.wework.entity.user/_mapping \</span><br></pre></td></tr></table></figure></li><li><p>搜索</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl --request POST \</span><br><span class="line">  --url <span class="string">'http://localhost:9200/com.wework.entity.user/_search?pretty='</span> -d \</span><br><span class="line"><span class="string">'&#123;</span></span><br><span class="line"><span class="string">    "query": &#123;</span></span><br><span class="line"><span class="string">        "match": &#123;</span></span><br><span class="line"><span class="string">            "name.pinyin": "xiao明"</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    &#125;,</span></span><br><span class="line"><span class="string">    "from": 0,</span></span><br><span class="line"><span class="string">    "size": 10,</span></span><br><span class="line"><span class="string">    "sort": ["_score"]</span></span><br><span class="line"><span class="string">&#125;'</span></span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;install-es-and-plugins&quot;&gt;&lt;a href=&quot;#install-es-and-plugins&quot; class=&quot;headerlink&quot; title=&quot;install es and plugins&quot;&gt;&lt;/a&gt;install es and plugi
      
    
    </summary>
    
    
      <category term="elasticsearch" scheme="https://github.com/carl-zk/blog/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>MySQL 存储过程分页</title>
    <link href="https://github.com/carl-zk/blog/2018/09/23/MySQL-%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%88%86%E9%A1%B5/"/>
    <id>https://github.com/carl-zk/blog/2018/09/23/MySQL-存储过程分页/</id>
    <published>2018-09-23T09:19:40.000Z</published>
    <updated>2019-02-16T01:58:27.788Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.w3resource.com/mysql/mysql-procedure.php" target="_blank" rel="noopener">https://www.w3resource.com/mysql/mysql-procedure.php</a><br><a href="https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substr" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/8.0/en/string-functions.html#function_substr</a><br><a href></a></p><p><code>MySQL version: 5.7.9</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">procedure</span> <span class="keyword">if</span> <span class="keyword">exists</span> pagination;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> pagination(<span class="keyword">in</span> i_query <span class="built_in">varchar</span>(<span class="number">8000</span>), <span class="keyword">in</span> i_page <span class="built_in">int</span>, <span class="keyword">in</span> i_size <span class="built_in">int</span>, <span class="keyword">out</span> o_total <span class="built_in">int</span>)</span><br><span class="line">  <span class="keyword">begin</span></span><br><span class="line">    <span class="keyword">set</span> @limit_start = (i_page - <span class="number">1</span>) * i_size;</span><br><span class="line">    <span class="keyword">set</span> @limit_size = i_size;</span><br><span class="line">    <span class="keyword">set</span> @tmp_query = <span class="keyword">concat</span>(<span class="string">'select * from ('</span>, i_query, <span class="string">') t limit ?, ?'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> @tmp_total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">set</span> @tmp_stat = <span class="keyword">concat</span>(<span class="string">'select count(1) into @tmp_total from ('</span>, i_query, <span class="string">') t '</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">prepare</span> stmt_query <span class="keyword">from</span> @tmp_query;</span><br><span class="line">    <span class="keyword">execute</span> stmt_query <span class="keyword">using</span> @limit_start, @limit_size;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">prepare</span> stmt_count <span class="keyword">from</span> @tmp_stat;</span><br><span class="line">    <span class="keyword">execute</span> stmt_count;</span><br><span class="line">    <span class="keyword">set</span> o_total = @tmp_total;</span><br><span class="line">  <span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>参照之前写的 Oracle 版的分页，思路是一样的；比较坑的是从括号里传的变量前面不加@，在拼接SQL的时候需要另外定义变量才能使用 select count(1) into 。</p><p><code>show VARIABLES like &#39;%max_allowed_packet%&#39;;</code> SQL长度限制，单位 byte.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        Class.forName(<span class="string">"com.mysql.cj.jdbc.Driver"</span>);</span><br><span class="line">        Connection connect = DriverManager</span><br><span class="line">                .getConnection(<span class="string">"jdbc:mysql://localhost:3306/mydb?"</span></span><br><span class="line">                        + <span class="string">"user=root&amp;password=password"</span>);</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        CallableStatement callableStatement = connect.prepareCall(<span class="string">"&#123;call pagination(?,?,?,?)&#125;"</span>);</span><br><span class="line">        callableStatement.setString(<span class="number">1</span>, <span class="string">"select * from tbl_user order by id desc"</span>);</span><br><span class="line">        callableStatement.setInt(<span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">        callableStatement.setInt(<span class="number">3</span>, <span class="number">6</span>);</span><br><span class="line">        callableStatement.registerOutParameter(<span class="number">4</span>, MysqlType.INT);</span><br><span class="line">        ResultSet resultSet = callableStatement.executeQuery();</span><br><span class="line">        total = callableStatement.getInt(<span class="number">4</span>);</span><br><span class="line">        System.out.println(<span class="string">"total = "</span> + total);</span><br><span class="line">        <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">            System.out.println(resultSet.getInt(<span class="string">"id"</span>) + <span class="string">", "</span> + resultSet.getString(<span class="string">"name"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        connect.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.w3resource.com/mysql/mysql-procedure.php&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.w3resource.com/mysql/mysql-proc
      
    
    </summary>
    
    
      <category term="MySQL" scheme="https://github.com/carl-zk/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Mysql 中文乱码</title>
    <link href="https://github.com/carl-zk/blog/2018/09/14/mysql-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <id>https://github.com/carl-zk/blog/2018/09/14/mysql-中文乱码/</id>
    <published>2018-09-14T07:42:50.000Z</published>
    <updated>2019-02-16T01:58:27.796Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/blueheart20/article/details/52385142" target="_blank" rel="noopener">https://blog.csdn.net/blueheart20/article/details/52385142</a></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'char%'</span></span><br></pre></td></tr></table></figure><p>编辑 <code>/etc/my.cnf</code><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></span><br><span class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></span><br><span class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></span><br><span class="line"><span class="comment"># changes to the binary log between backups.</span></span><br><span class="line"><span class="comment"># log_bin</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These are commonly set, remove the # and set as required.</span></span><br><span class="line"><span class="comment"># basedir = .....</span></span><br><span class="line"><span class="comment"># datadir = .....</span></span><br><span class="line"><span class="comment"># port = .....</span></span><br><span class="line"><span class="comment"># server_id = .....</span></span><br><span class="line"><span class="comment"># socket = .....</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></span><br><span class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></span><br><span class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></span><br><span class="line"><span class="comment"># join_buffer_size = 128M</span></span><br><span class="line"><span class="comment"># sort_buffer_size = 2M</span></span><br><span class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></span><br><span class="line"></span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</span><br></pre></td></tr></table></figure></p><p>重启，over。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/blueheart20/article/details/52385142&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/blueheart20/art
      
    
    </summary>
    
    
      <category term="MySQL" scheme="https://github.com/carl-zk/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>restTemplate未设超时导致线程池枯竭</title>
    <link href="https://github.com/carl-zk/blog/2018/08/21/restTemplate%E6%9C%AA%E8%AE%BE%E8%B6%85%E6%97%B6%E5%AF%BC%E8%87%B4%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%9E%AF%E7%AB%AD/"/>
    <id>https://github.com/carl-zk/blog/2018/08/21/restTemplate未设超时导致线程池枯竭/</id>
    <published>2018-08-21T08:05:55.000Z</published>
    <updated>2019-02-16T01:58:27.797Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.baeldung.com/rest-template" target="_blank" rel="noopener">https://www.baeldung.com/rest-template</a><br>出去玩了3天服务器没出事，回来第一天就出事了，而且还很奇怪。<br>关键是报的这个错误明显是数据库连接池问题，看了下数据库是好的，又重启了数据库和应用服务器，这个错误居然在重启后又出现了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">org.springframework.orm.jpa.JpaSystemException: Unable to acquire JDBC Connection; nested exception is org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection</span><br><span class="line">    at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:333)</span><br><span class="line">    at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:244)</span><br><span class="line">    at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:503)</span><br><span class="line">    at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:59)</span><br><span class="line">    at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:209)</span><br><span class="line">    at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:147)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:133)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:57)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:213)</span><br><span class="line">    at com.sun.proxy.$Proxy137.findUserByMobile(Unknown Source)</span><br><span class="line">    at com.livenaked.hub.odm.service.AbstractUserService.findUserByMobile(AbstractUserService.java:90)</span><br><span class="line">    at com.livenaked.hub.odm.service.app.impl.AppUserService.getCurrentPersistOdmUser(AppUserService.java:64)</span><br><span class="line">    at com.livenaked.hub.odm.service.app.impl.AppUserService$$FastClassBySpringCGLIB$$8361a0b2.invoke(&lt;generated&gt;)</span><br><span class="line">    at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)</span><br><span class="line">    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:669)</span><br><span class="line">    at com.livenaked.hub.odm.service.app.impl.AppUserService$$EnhancerBySpringCGLIB$$cb9e611.getCurrentPersistOdmUser(&lt;generated&gt;)</span><br><span class="line">    at com.livenaked.hub.odm.controller.app.AppUserController.findUserWallet(AppUserController.java:38)</span><br><span class="line">    at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source)</span><br><span class="line">    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)</span><br><span class="line">    at java.lang.reflect.Method.invoke(Method.java:498)</span><br><span class="line">    at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)</span><br><span class="line">    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133)</span><br><span class="line">    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97)</span><br><span class="line">    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)</span><br><span class="line">    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)</span><br><span class="line">    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)</span><br><span class="line">    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)</span><br><span class="line">    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)</span><br><span class="line">    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)</span><br><span class="line">    at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872)</span><br><span class="line">    at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)</span><br><span class="line">    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)</span><br><span class="line">    at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)</span><br><span class="line">    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)</span><br><span class="line">    at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:150)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)</span><br><span class="line">    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)</span><br><span class="line">    at org.springframework.security.web.debug.DebugFilter.invokeWithWrappedRequest(DebugFilter.java:90)</span><br><span class="line">    at org.springframework.security.web.debug.DebugFilter.doFilter(DebugFilter.java:77)</span><br><span class="line">    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347)</span><br><span class="line">    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)</span><br><span class="line">    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)</span><br><span class="line">    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)</span><br><span class="line">    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)</span><br><span class="line">    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)</span><br><span class="line">    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:478)</span><br><span class="line">    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)</span><br><span class="line">    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)</span><br><span class="line">    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)</span><br><span class="line">    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)</span><br><span class="line">    at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)</span><br><span class="line">    at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)</span><br><span class="line">    at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)</span><br><span class="line">    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)</span><br><span class="line">    at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)</span><br><span class="line">    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)</span><br><span class="line">    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)</span><br><span class="line">    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)</span><br><span class="line">    at java.lang.Thread.run(Thread.java:745)</span><br><span class="line">Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection</span><br><span class="line">    at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)</span><br><span class="line">    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:109)</span><br><span class="line">    at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:95)</span><br><span class="line">    at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:90)</span><br><span class="line">    at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:112)</span><br><span class="line">    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:47)</span><br><span class="line">    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:146)</span><br><span class="line">    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:172)</span><br><span class="line">    at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:148)</span><br><span class="line">    at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:1928)</span><br><span class="line">    at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1897)</span><br><span class="line">    at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1875)</span><br><span class="line">    at org.hibernate.loader.Loader.doQuery(Loader.java:919)</span><br><span class="line">    at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:336)</span><br><span class="line">    at org.hibernate.loader.Loader.doList(Loader.java:2611)</span><br><span class="line">    at org.hibernate.loader.Loader.doList(Loader.java:2594)</span><br><span class="line">    at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2423)</span><br><span class="line">    at org.hibernate.loader.Loader.list(Loader.java:2418)</span><br><span class="line">    at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:501)</span><br><span class="line">    at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:371)</span><br><span class="line">    at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:220)</span><br><span class="line">    at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1268)</span><br><span class="line">    at org.hibernate.internal.QueryImpl.list(QueryImpl.java:87)</span><br><span class="line">    at org.hibernate.jpa.internal.QueryImpl.list(QueryImpl.java:567)</span><br><span class="line">    at org.hibernate.jpa.internal.QueryImpl.getSingleResult(QueryImpl.java:482)</span><br><span class="line">    at org.hibernate.jpa.criteria.compile.CriteriaQueryTypeQueryAdapter.getSingleResult(CriteriaQueryTypeQueryAdapter.java:54)</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:208)</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:87)</span><br><span class="line">    at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:116)</span><br><span class="line">    at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:106)</span><br><span class="line">    at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:492)</span><br><span class="line">    at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:475)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:56)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)</span><br><span class="line">    at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)</span><br><span class="line">    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)</span><br><span class="line">    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)</span><br><span class="line">    at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)</span><br><span class="line">    ... 104 common frames omitted</span><br><span class="line">Caused by: java.sql.SQLException: Cannot get a connection, pool error Timeout waiting for idle object</span><br><span class="line">    at org.apache.commons.dbcp2.PoolingDataSource.getConnection(PoolingDataSource.java:142)</span><br><span class="line">    at org.apache.commons.dbcp2.BasicDataSource.getConnection(BasicDataSource.java:1533)</span><br><span class="line">    at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)</span><br><span class="line">    at org.hibernate.internal.AbstractSessionImpl$NonContextualJdbcConnectionAccess.obtainConnection(AbstractSessionImpl.java:382)</span><br><span class="line">    at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:87)</span><br><span class="line">    ... 140 common frames omitted</span><br><span class="line">Caused by: java.util.NoSuchElementException: Timeout waiting for idle object</span><br><span class="line">    at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:449)</span><br><span class="line">    at org.apache.commons.pool2.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:363)</span><br><span class="line">    at org.apache.commons.dbcp2.PoolingDataSource.getConnection(PoolingDataSource.java:134)</span><br><span class="line">    ... 144 common frames omitted</span><br></pre></td></tr></table></figure></p><p>WIFI server 被人停了，重启就好了。</p><p>服务部署在docker，框架是Spring boot。用的是 RestTemplate 去请求 WIFI server，这个 restTemplate 没有设置超时限制，我怀疑是没有设超时导致连接池耗完，但是看完代码找不到是哪里用到过数据库，监控也看不到连接池满没满；我还查了 socket 连接限制，上限10万多，也没发现问题。总之重启 WIFI server 就正常了，先记下吧，坑太多了。</p><p>还有可能是 Tomcat 的线程池满了，<a href="https://tomcat.apache.org/tomcat-8.0-doc/config/executor.html" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-8.0-doc/config/executor.html</a>，这里的 200 应该是线程池大小，如果是这样的话应该就可以说通了，我们 200 的并发量还是有的。</p><p>one more, 方法调用是 this.方法(xxx)，没有加任何 @Transactional 注解，spring事务是共享上下文的，这里也有可能是在调用 restTemplate 时还有事务没有提交，导致后来的连接池耗尽。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AppConf</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate(getClientHttpRequestFactory());</span><br><span class="line">        <span class="comment">//return new RestTemplate();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ClientHttpRequestFactory <span class="title">getClientHttpRequestFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> timeout = <span class="number">5000</span>;</span><br><span class="line">        RequestConfig config = RequestConfig.custom()</span><br><span class="line">                .setConnectTimeout(timeout)</span><br><span class="line">                .setConnectionRequestTimeout(timeout)</span><br><span class="line">                .setSocketTimeout(timeout)</span><br><span class="line">                .build();</span><br><span class="line">        CloseableHttpClient client = HttpClientBuilder</span><br><span class="line">                .create()</span><br><span class="line">                .setDefaultRequestConfig(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory(client);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.baeldung.com/rest-template&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.baeldung.com/rest-template&lt;/a&gt;&lt;br&gt;出去玩了3天服务器没出
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker Note</title>
    <link href="https://github.com/carl-zk/blog/2018/08/11/docker-note/"/>
    <id>https://github.com/carl-zk/blog/2018/08/11/docker-note/</id>
    <published>2018-08-11T15:30:54.000Z</published>
    <updated>2019-02-16T01:58:27.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="docker-container-networking"><a href="#docker-container-networking" class="headerlink" title="docker container networking"></a>docker container networking</h2><h3 id="Closed-containers"><a href="#Closed-containers" class="headerlink" title="Closed containers"></a>Closed containers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --net none</span><br></pre></td></tr></table></figure><h3 id="Bridged-containers-default"><a href="#Bridged-containers-default" class="headerlink" title="Bridged containers (default)"></a>Bridged containers (default)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --net bridge</span><br></pre></td></tr></table></figure><h4 id="custom-name-resolution"><a href="#custom-name-resolution" class="headerlink" title="custom name resolution"></a>custom name resolution</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--hostname containerhostname</span><br></pre></td></tr></table></figure><p>set primary DNS server<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--dns 8.8.8.8</span><br></pre></td></tr></table></figure></p><p>在此 DNS server 上配置容器的 IP 和 hostname</p><p>custome mapping for an IP address and host name pair:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--add-host test:1.1.1.1</span><br></pre></td></tr></table></figure></p><p>所有映射均可在 /etc/hosts 中看到。</p><p>端口映射：</p><ol><li><p>&lt;containerPort></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 3333</span><br></pre></td></tr></table></figure></li><li><p>&lt;hostPort>:&lt;containerPort></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 3333:3333</span><br></pre></td></tr></table></figure></li><li><p>&lt;ip>::&lt;containerPort></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 1.1.1.1::3333</span><br></pre></td></tr></table></figure></li><li><p>&lt;ip>:&lt;hostPort>:&lt;containerPort></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-p 1.1.1.1:3333:3333</span><br></pre></td></tr></table></figure></li></ol><p>默认情况下，inter-container communication 的策略是完全访问，即同一个 docker0 bridge 下的所有容器都可以 ping 通其它容器。这其实是很不安全的，禁用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--icc=false</span><br></pre></td></tr></table></figure></p><p>我们可以通过修改 bridge interface 来控制：</p><ul><li>define the address and subnet of the bridge</li><li>define the range of IP addresses that can be assigned to containers</li><li>define the maximum transmission unit (MTU)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--bip &quot;192.168.0.128/25&quot;</span><br></pre></td></tr></table></figure><p>这样就会使 docker0 interface 的 IP 设为 192.168.0.128，允许 192.168.0.128-192.168.0.255 访问。<br>设置好后，容器的 IP 就会在这个区间分配，你可以为容器指定固定 IP:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--fixed-cidr &quot;192.168.0.130/25&quot;</span><br></pre></td></tr></table></figure></p><p>如果需要设置 maximum size of a packet，(default 1500 bytes)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-mtu 1200</span><br></pre></td></tr></table></figure></p><p>如何使用定制的 bridge:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-b mybridge</span><br></pre></td></tr></table></figure></p><h3 id="Joined-containers"><a href="#Joined-containers" class="headerlink" title="Joined containers"></a>Joined containers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --net container:xxx</span><br></pre></td></tr></table></figure><p>for example,<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name brady \</span><br><span class="line">    --net none alpine:latest \</span><br><span class="line">    nc -l 127.0.0.1:3333</span><br><span class="line">docker run -it \</span><br><span class="line">    --net container:brady \</span><br><span class="line">    alpine:latest netstat –al</span><br></pre></td></tr></table></figure></p><p>即 network interface 版的 managed volume.<br>使用场景：</p><ul><li>在a中修改网络配置使b中的生效。</li><li>在a中监控b的流量。</li><li>多个容易共用一个端口交流。</li><li>与容器未 expose 的端口通信。</li></ul><p>Joined containers 允许你连接任何其它容器，但它还不是最不安全的，最不安全的是下面这个。</p><h3 id="Open-containers"><a href="#Open-containers" class="headerlink" title="Open containers"></a>Open containers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --net host</span><br></pre></td></tr></table></figure><h2 id="Inter-container-dependencies"><a href="#Inter-container-dependencies" class="headerlink" title="Inter-container dependencies"></a>Inter-container dependencies</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--link a:alias-a</span><br></pre></td></tr></table></figure><p>link 不具有传递性：B-&gt;A, C-&gt;B =/= C-&gt;A.<br>link 有一个特权：它可以连接没有 expose 任何端口号的容器。</p><h2 id="Limiting-risk-with-isolation"><a href="#Limiting-risk-with-isolation" class="headerlink" title="Limiting risk with isolation"></a>Limiting risk with isolation</h2><h3 id="memory-limits"><a href="#memory-limits" class="headerlink" title="memory limits"></a>memory limits</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-m 256m</span><br></pre></td></tr></table></figure><p>单位：b, k, m, g<br>这里需要注意的是设置为 256m 并不表示真会分配的到这么多，仅仅是为了防止使用超度。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name ch6_mariadb \</span><br><span class="line">    --memory 256m \</span><br><span class="line">    --cpu-shares 1024</span><br><span class="line">    --user nobody \</span><br><span class="line">    --cap-drop all \</span><br><span class="line">    dockerfile/mariadb</span><br></pre></td></tr></table></figure><h2 id="制作镜像"><a href="#制作镜像" class="headerlink" title="制作镜像"></a>制作镜像</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rie \</span><br><span class="line">-e ENV_A=a -e ENV_B=b \</span><br><span class="line">--entrypoint <span class="string">"/bin/sh"</span> \</span><br><span class="line">busybox:latest \</span><br><span class="line">-c <span class="string">"echo \$ENV_A"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker commit -a <span class="string">"carl"</span> -m <span class="string">"just for example"</span> rie zxfspace/rie</span><br></pre></td></tr></table></figure><h3 id="exporting-and-importing-flat-file-systems"><a href="#exporting-and-importing-flat-file-systems" class="headerlink" title="exporting and importing flat file systems"></a>exporting and importing flat file systems</h3><p>如果需要添加一个文件，用<code>docker copy</code>；如果多个文件，<code>docker export</code>；<br>将容器文件 copy 到 tar 包。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export --output export.tar container</span><br></pre></td></tr></table></figure></p><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">FROM ubuntu:latest</span><br><span class="line"><span class="comment"># (or scratch for empty)</span></span><br><span class="line">MAINTAINER carl</span><br><span class="line">RUN <span class="built_in">echo</span> <span class="string">'hello'</span> \</span><br><span class="line">    &amp;&amp; <span class="built_in">echo</span> <span class="string">'world'</span></span><br><span class="line">ENV APPROOT=<span class="string">"/app"</span> \</span><br><span class="line">    APP=<span class="string">"myapp"</span> \</span><br><span class="line">    VERSION=<span class="string">'0.1'</span></span><br><span class="line">LABEL base.name=<span class="string">"hw"</span> \</span><br><span class="line">      base.version=<span class="string">"<span class="variable">$&#123;VERSION&#125;</span>"</span></span><br><span class="line">WORKDIR <span class="variable">$APPROOT</span></span><br><span class="line">ENTRYPOINT [<span class="string">"pwd"</span>]</span><br><span class="line">EXPOSE 3333</span><br><span class="line"><span class="comment"># do not set the default user in the base</span></span><br></pre></td></tr></table></figure><p><code>docker build -f df -t diy:1 .</code><br>不想加到 image 中的文件写到 <strong>.dockerignore</strong> 中。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">FROM diy:1</span><br><span class="line">COPY [<span class="string">"./"</span>, <span class="string">"<span class="variable">$&#123;APPROOT&#125;</span>"</span>]</span><br><span class="line"><span class="comment"># USER example:example</span></span><br><span class="line">RUN chmod 111 <span class="variable">$&#123;APPROOT&#125;</span>/df</span><br><span class="line">VOLUME [<span class="string">"/docker/diy"</span>, <span class="string">"/var/log"</span>]</span><br><span class="line">CMD [<span class="string">"echo 'hello'"</span>]</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;docker-container-networking&quot;&gt;&lt;a href=&quot;#docker-container-networking&quot; class=&quot;headerlink&quot; title=&quot;docker container networking&quot;&gt;&lt;/a&gt;docke
      
    
    </summary>
    
    
      <category term="docker" scheme="https://github.com/carl-zk/blog/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Docker Practice</title>
    <link href="https://github.com/carl-zk/blog/2018/08/05/docker-practice/"/>
    <id>https://github.com/carl-zk/blog/2018/08/05/docker-practice/</id>
    <published>2018-08-05T05:23:07.000Z</published>
    <updated>2019-02-16T01:58:27.794Z</updated>
    
    <content type="html"><![CDATA[<h2 id="run-mysql-with-docker"><a href="#run-mysql-with-docker" class="headerlink" title="run mysql with docker"></a>run mysql with docker</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mysql_server \</span><br><span class="line">-p 3307:3306 \</span><br><span class="line">-v /docker/mysqlDB:/var/lib/mysql \</span><br><span class="line">-e MYSQL_ROOT_PASSWORD=root \</span><br><span class="line">-e MYSQL_ROOT_HOST=% \</span><br><span class="line">mysql:latest</span><br></pre></td></tr></table></figure><p>检查是否运行成功：docker ps</p><p>然后：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h0.0.0.0 -P3307 -uroot -proot</span><br></pre></td></tr></table></figure></p><p>如果报下面错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 2059 (HY000): Authentication plugin &apos;caching_sha2_password&apos; cannot be loaded: dlopen(/usr/local/mysql/lib/plugin/caching_sha2_password.so, 2): image not found</span><br></pre></td></tr></table></figure></p><p>则：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it mysql_server mysql -uroot -proot</span><br><span class="line">alter user &apos;root&apos;@&apos;%&apos; identified with mysql_native_password by &apos;root&apos;;</span><br></pre></td></tr></table></figure></p><p><strong>备注：</strong></p><p>默认情况下 MySQL server 只允许本机登录，修改任意IP地址登录：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;root&apos; with grant option;</span><br></pre></td></tr></table></figure></p><p>查看 MySQL server container IP 地址：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect mysql_server | grep IPAdd</span><br></pre></td></tr></table></figure></p><p>停止并清理<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker rm -f mysql_server</span><br><span class="line">docker container prune</span><br><span class="line">docker image prune</span><br></pre></td></tr></table></figure></p><p><a href="https://en.wikipedia.org/wiki/0.0.0.0" target="_blank" rel="noopener">IP 地址 0.0.0.0 的意义</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;run-mysql-with-docker&quot;&gt;&lt;a href=&quot;#run-mysql-with-docker&quot; class=&quot;headerlink&quot; title=&quot;run mysql with docker&quot;&gt;&lt;/a&gt;run mysql with docker&lt;/
      
    
    </summary>
    
    
      <category term="docker" scheme="https://github.com/carl-zk/blog/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>BeanUtils的性能问题</title>
    <link href="https://github.com/carl-zk/blog/2018/05/26/BeanUtils%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/carl-zk/blog/2018/05/26/BeanUtils的性能问题/</id>
    <published>2018-05-26T07:57:21.000Z</published>
    <updated>2019-02-16T01:58:27.783Z</updated>
    
    <content type="html"><![CDATA[<p>Web项目后台输出一般需要把model转换成vo输出，但是有时候为了取巧不写model转vo的方法，直接利用spring的BeanUtils拷贝字段，那么这么做对性能影响大吗？</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bean.MyBeanUtils;</span><br><span class="line"><span class="keyword">import</span> bean.Skill;</span><br><span class="line"><span class="keyword">import</span> bean.User;</span><br><span class="line"><span class="keyword">import</span> bean.UserVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        List&lt;Skill&gt; skills = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        skills.add(<span class="keyword">new</span> Skill(<span class="string">"游泳"</span>, <span class="number">10</span>));</span><br><span class="line">        skills.add(<span class="keyword">new</span> Skill(<span class="string">"健身"</span>, <span class="number">9</span>));</span><br><span class="line">        Set&lt;Skill&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">        set.add(<span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>));</span><br><span class="line">        set.add(<span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>));</span><br><span class="line">        Map&lt;Skill, Skill&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>), <span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>));</span><br><span class="line">        map.put(<span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>), <span class="keyword">new</span> Skill(<span class="string">"跑步"</span>, <span class="number">11</span>));</span><br><span class="line">        User user = <span class="keyword">new</span> User(<span class="string">"小红"</span>, <span class="number">18</span>, skills, set, map);</span><br><span class="line">        UserVo vo = <span class="keyword">new</span> UserVo();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1000000</span>;</span><br><span class="line">        <span class="keyword">long</span> now, end;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// use BeanUtils</span></span><br><span class="line">        now = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            BeanUtils.copyProperties(user, vo);</span><br><span class="line">        &#125;</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end - now);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// use MyBeanUtils</span></span><br><span class="line">        now = System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            MyBeanUtils.copyFields(user, vo);</span><br><span class="line">        &#125;</span><br><span class="line">        end = System.currentTimeMillis();</span><br><span class="line">        System.out.println(end - now);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        vo = <span class="keyword">new</span> UserVo();</span><br><span class="line">        MyBeanUtils.copyFields(user, vo, <span class="string">"age"</span>);</span><br><span class="line">        System.out.println(vo);</span><br><span class="line"></span><br><span class="line">        vo = <span class="keyword">new</span> UserVo();</span><br><span class="line">        MyBeanUtils.copyWhiteListFields(user, vo, <span class="keyword">new</span> String[]&#123;<span class="string">"age"</span>, <span class="string">"map"</span>&#125;);</span><br><span class="line">        System.out.println(vo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>任何时候直接使用vo.setXX(model.getxx())都比反射来的快，BeanUtils始终无法跟它比速度。BeanUtils的实现还是比较优化的，它把Class能缓存的信息都做了缓存，即不必每次对Class做反射拿getter/setter方法。</p><p>我对BeanUtils做了进一步的缓存，这应该是把缓存用到极致了，但是只有当数据量非常庞大(n&gt;1000000)才能显现出非常大的优势，但一般场景下BeanUtils足以应付。</p><p>MyBeanUtils比Beanutils更适合做Controller层的工具使用，在追求高并发、吞吐量的应用下，这点缓存带来的速度的飞跃是非常值得的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> bean;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.Assert;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.PropertyDescriptor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBeanUtils</span> <span class="keyword">extends</span> <span class="title">BeanUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> ConcurrentHashMap&lt;MyKey, List&lt;MyValue&gt;&gt; myCache = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyWhiteListFields</span><span class="params">(Object from, Object to, String[] whiteList)</span> </span>&#123;</span><br><span class="line">        Assert.notNull(whiteList, <span class="string">"whiteList is null"</span>);</span><br><span class="line">        handle(from, to, whiteList, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">copyFields</span><span class="params">(Object from, Object to, String... ignores)</span> </span>&#123;</span><br><span class="line">        Assert.notNull(from, <span class="string">"from is null"</span>);</span><br><span class="line">        Assert.notNull(to, <span class="string">"to is null"</span>);</span><br><span class="line">        handle(from, to, ignores, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Object from, Object to, String[] fields, <span class="keyword">boolean</span> isIgnore)</span> </span>&#123;</span><br><span class="line">        MyKey myKey = <span class="keyword">new</span> MyKey(from.getClass(), to.getClass(), fields, isIgnore);</span><br><span class="line">        List&lt;MyValue&gt; list = getValueList(myKey);</span><br><span class="line">        list.stream().forEach(x -&gt; &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                x.setter.invoke(to, x.getter.invoke(from));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;MyValue&gt; <span class="title">getValueList</span><span class="params">(MyKey myKey)</span> </span>&#123;</span><br><span class="line">        List&lt;MyValue&gt; list = myCache.get(myKey);</span><br><span class="line">        <span class="keyword">return</span> list == <span class="keyword">null</span> ? processKey(myKey) : list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// This call is slow so we do it once.</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;MyValue&gt; <span class="title">processKey</span><span class="params">(MyKey myKey)</span> </span>&#123;</span><br><span class="line">        PropertyDescriptor[] pdsFrom = BeanUtils.getPropertyDescriptors(myKey.from);</span><br><span class="line">        List&lt;MyValue&gt; list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        Arrays.stream(pdsFrom)</span><br><span class="line">                .filter(pd -&gt; !isIgnore(pd.getName(), myKey.fields, myKey.isIgnore))</span><br><span class="line">                .filter(pd -&gt; !<span class="string">"class"</span>.equals(pd.getName()))</span><br><span class="line">                .forEach(pd -&gt; &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        Method getter = pd.getReadMethod();</span><br><span class="line">                        Method setter = BeanUtils.getPropertyDescriptor(myKey.to, pd.getName()).getWriteMethod();</span><br><span class="line">                        setter.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                        getter.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">                        list.add(<span class="keyword">new</span> MyValue(getter, setter));</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">        myCache.put(myKey, list);</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isIgnore</span><span class="params">(String name, String[] fields, <span class="keyword">boolean</span> isIgnore)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isIgnore) &#123;</span><br><span class="line">            <span class="keyword">return</span> fields == <span class="keyword">null</span> ? <span class="keyword">false</span> : Arrays.stream(fields).anyMatch(item -&gt; item.equals(name));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> !Arrays.stream(fields).anyMatch(item -&gt; item.equals(name));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyKey</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> Class from;</span><br><span class="line">        <span class="keyword">public</span> Class to;</span><br><span class="line">        <span class="keyword">public</span> String[] fields;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">boolean</span> isIgnore;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyKey</span><span class="params">(Class from, Class to, String[] fields, <span class="keyword">boolean</span> isIgnore)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.from = from;</span><br><span class="line">            <span class="keyword">this</span>.to = to;</span><br><span class="line">            <span class="keyword">this</span>.fields = fields;</span><br><span class="line">            <span class="keyword">this</span>.isIgnore = isIgnore;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object o)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span> == o) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> MyKey)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            MyKey myKey = (MyKey) o;</span><br><span class="line">            <span class="keyword">return</span> isIgnore == myKey.isIgnore &amp;&amp;</span><br><span class="line">                    Objects.equals(from, myKey.from) &amp;&amp;</span><br><span class="line">                    Objects.equals(to, myKey.to) &amp;&amp;</span><br><span class="line">                    Arrays.equals(fields, myKey.fields);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> result = Objects.hash(from, to, isIgnore);</span><br><span class="line">            result = <span class="number">31</span> * result + Arrays.hashCode(fields);</span><br><span class="line">            <span class="keyword">return</span> result;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">MyValue</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> Method getter;</span><br><span class="line">        <span class="keyword">public</span> Method setter;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MyValue</span><span class="params">(Method getter, Method setter)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.getter = getter;</span><br><span class="line">            <span class="keyword">this</span>.setter = setter;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类似工具：<br><a href="https://github.com/DozerMapper/dozer/">https://github.com/DozerMapper/dozer/</a><br>不同点在于可以配置映射的字段名。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Web项目后台输出一般需要把model转换成vo输出，但是有时候为了取巧不写model转vo的方法，直接利用spring的BeanUtils拷贝字段，那么这么做对性能影响大吗？&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="java" scheme="https://github.com/carl-zk/blog/categories/java/"/>
    
    
      <category term="reflect" scheme="https://github.com/carl-zk/blog/tags/reflect/"/>
    
  </entry>
  
  <entry>
    <title>AOP无法增强问题解剖</title>
    <link href="https://github.com/carl-zk/blog/2018/05/15/AOP%E6%97%A0%E6%B3%95%E5%A2%9E%E5%BC%BA%E9%97%AE%E9%A2%98%E8%A7%A3%E5%89%96/"/>
    <id>https://github.com/carl-zk/blog/2018/05/15/AOP无法增强问题解剖/</id>
    <published>2018-05-15T01:36:44.000Z</published>
    <updated>2019-02-16T01:58:27.783Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>摘录自：《精通Spring 4.x 企业应用开发实战》</p></blockquote><p>由于Spring使用CGLib增强，所以无法对private、static、final的方法进行增强，此外还有一种特别容易忽视的情况，即funA，funB都被增强，但在funA中调用funB时funB其实并未被增强。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Component</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Waiter</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">funA</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            funB();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">funB</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"What do you want to eat?"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Aspect</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">P</span> </span>&#123;</span><br><span class="line">        <span class="meta">@Pointcut</span>(<span class="string">"execution(* *.fun*(..))"</span>)</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pointcut</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Before</span>(<span class="string">"pointcut()"</span>)</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">advice</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"good morning sir"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@Import</span>(&#123;P.class, Waiter.class&#125;)</span><br><span class="line">    <span class="meta">@EnableAspectJAutoProxy</span>(proxyTargetClass = <span class="keyword">true</span>)</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(Config.class);</span><br><span class="line">    Waiter w = context.getBean(Waiter.class);</span><br><span class="line">    w.funA();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>遇到这种情况，需要特别注意，解决方法很简单，就是在funA中使用代理对象调用funB。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;摘录自：《精通Spring 4.x 企业应用开发实战》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于Spring使用CGLib增强，所以无法对private、static、final的方法进行增强，此外还有一种特别容易忽视的情况，即funA，fu
      
    
    </summary>
    
    
      <category term="spring" scheme="https://github.com/carl-zk/blog/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Java动态代理</title>
    <link href="https://github.com/carl-zk/blog/2018/05/12/Java%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86/"/>
    <id>https://github.com/carl-zk/blog/2018/05/12/Java动态代理/</id>
    <published>2018-05-12T00:46:13.000Z</published>
    <updated>2019-02-16T01:58:27.787Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JDK原生动态代理"><a href="#JDK原生动态代理" class="headerlink" title="JDK原生动态代理"></a>JDK原生动态代理</h2><p><a href="http://www.cnblogs.com/xiaoluo501395377/p/3383130.html" target="_blank" rel="noopener">http://www.cnblogs.com/xiaoluo501395377/p/3383130.html</a><br>面向接口编程就一定要先定义接口再定义实现类吗？一个项目中有大量的 dao/imp、service/imp 包，看上去很‘规范’（理由是大家都这么写）。其实这样写是有历史包袱的，AOP特性的实现依赖于动态代理机制，而最早的框架中只能对接口进行动态代理，这样就导致每次都是先写接口，然后让框架去代理这个接口的实现类，返回对象是接口。而现在框架有能力直接代理对象无须接口，那我们的dao、service接口还有保留的意义吗？<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicProxyTest</span> </span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">interface</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">say</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">say</span><span class="params">(String words)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Duck</span> <span class="keyword">implements</span> <span class="title">Animal</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"呱呱"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">(String words)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"卧槽："</span> + words);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyOfAnimal</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        Animal animal;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ProxyOfAnimal</span><span class="params">(Animal animal)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.animal = animal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Proxy invoke"</span>);</span><br><span class="line">            System.out.println(method);</span><br><span class="line">            <span class="keyword">return</span> method.invoke(<span class="keyword">this</span>.animal, args);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Duck duck = <span class="keyword">new</span> Duck();</span><br><span class="line">        ProxyOfAnimal proxyOfAnimal = <span class="keyword">new</span> ProxyOfAnimal(duck);</span><br><span class="line">        Animal got = (Animal) Proxy.newProxyInstance(duck.getClass().getClassLoader(), duck.getClass().getInterfaces(), proxyOfAnimal);</span><br><span class="line">        System.out.println(got.getClass().getName());</span><br><span class="line">        got.say();</span><br><span class="line">        got.say(<span class="string">"wawa"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$Proxy0</span><br><span class="line">Proxy invoke</span><br><span class="line">public abstract void DynamicProxyTest$Animal.say()</span><br><span class="line">呱呱</span><br><span class="line">Proxy invoke</span><br><span class="line">public abstract void DynamicProxyTest$Animal.say(java.lang.String)</span><br><span class="line">卧槽：wawa</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p><p>InvocationHandler.invoke(Object proxy, Method method, Object[] args) 第一个参数是 Proxy.newProxyInstance 的返回对象，即 $Proxy0。可能是老接口没设计好，这个proxy在这里就是 this。</p><p>局限性：Proxy.newProxyInstance 只能返回接口Animal，不能返回对象Duck；不支持对static方法的代理。<br>优点：所谓的‘动态’只不过是调用某方法时去执行我事先定义好的handler方法，虽然我不必像静态代理那样写一个代理类，但是我需要写一个handler。但是我现在只需要写一个handler，就能产生Duck、Dog、Cat的代理类。</p><h2 id="CGLIB动态代理"><a href="#CGLIB动态代理" class="headerlink" title="CGLIB动态代理"></a>CGLIB动态代理</h2><p><a href="http://www.importnew.com/27772.html" target="_blank" rel="noopener">http://www.importnew.com/27772.html</a></p><blockquote><p><a href="https://github.com/cglib/cglib">CGLIB(Code Generation Library)</a>是一个基于ASM的字节码生成库，它允许我们在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理。</p></blockquote><p>spring的@Transactional注解不能用在static方法上就很好理解了。spring使用cglib代理，而cglib通过继承方式实现代理，那么static方法不能继承（它不属于任何对象），就不能被代理了。同样，final修饰的方法（不能被override）、final 修饰的类（不能被继承）也不能被代理。</p><p>cglib给的一个演示示例，理解其如何实现动态代理<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> net.sf.cglib.samples;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.*;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>  baliuka</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Bean</span> <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span>&#123;</span><br><span class="line">   </span><br><span class="line">    String sampleProperty;</span><br><span class="line">    </span><br><span class="line">  <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addPropertyChangeListener</span><span class="params">(PropertyChangeListener listener)</span></span>; </span><br><span class="line">   </span><br><span class="line">  <span class="function"><span class="keyword">abstract</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removePropertyChangeListener</span><span class="params">(PropertyChangeListener listener)</span></span>;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">getSampleProperty</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> sampleProperty;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSampleProperty</span><span class="params">(String value)</span></span>&#123;</span><br><span class="line">       System.out.println(<span class="string">"base bean"</span>);</span><br><span class="line">      <span class="keyword">this</span>.sampleProperty = value;</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="string">"sampleProperty is "</span> + sampleProperty;</span><br><span class="line">   &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> net.sf.cglib.samples;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.beans.*;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.*;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>  baliuka</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Beans</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> PropertyChangeSupport propertySupport;</span><br><span class="line">   </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addPropertyChangeListener</span><span class="params">(PropertyChangeListener listener)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        propertySupport.addPropertyChangeListener(listener);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removePropertyChangeListener</span><span class="params">(PropertyChangeListener listener)</span> </span>&#123;</span><br><span class="line">        propertySupport.removePropertyChangeListener(listener);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 返回一个代理对象 C</span></span><br><span class="line"><span class="comment">    * C绑定了一个MethodInterceptor mi，mi 为C 绑定了一个PropertyChangeSupport pcs，</span></span><br><span class="line"><span class="comment">    * 每次调用C的方法，都等于调用mi的intercept</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span>  Object <span class="title">newInstance</span><span class="params">( Class clazz )</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            Beans interceptor = <span class="keyword">new</span> Beans();</span><br><span class="line">            Enhancer e = <span class="keyword">new</span> Enhancer();</span><br><span class="line">            e.setSuperclass(clazz);</span><br><span class="line">            e.setCallback(interceptor);</span><br><span class="line">            Object bean = e.create();</span><br><span class="line">            interceptor.propertySupport = <span class="keyword">new</span> PropertyChangeSupport( bean );</span><br><span class="line">            <span class="keyword">return</span> bean;</span><br><span class="line">        &#125;<span class="keyword">catch</span>( Throwable e )&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Class C[] = <span class="keyword">new</span> Class[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Object emptyArgs [] = <span class="keyword">new</span> Object[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object obj, Method method, Object[] args, MethodProxy proxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Object retValFromSuper = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 非abstract方法，直接调</span></span><br><span class="line">            <span class="keyword">if</span> (!Modifier.isAbstract(method.getModifiers())) &#123;</span><br><span class="line">                retValFromSuper = proxy.invokeSuper(obj, args);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            String name = method.getName();</span><br><span class="line">            <span class="comment">// Bean中的两个abstract方法，在这里被'重载'了</span></span><br><span class="line">            <span class="keyword">if</span>( name.equals(<span class="string">"addPropertyChangeListener"</span>)) &#123;</span><br><span class="line">                addPropertyChangeListener((PropertyChangeListener)args[<span class="number">0</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span> ( name.equals( <span class="string">"removePropertyChangeListener"</span> ) )&#123;</span><br><span class="line">                removePropertyChangeListener((PropertyChangeListener)args[<span class="number">0</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 根据setXXX截取字段</span></span><br><span class="line">            <span class="keyword">if</span>( name.startsWith(<span class="string">"set"</span>) &amp;&amp;</span><br><span class="line">                args.length == <span class="number">1</span> &amp;&amp;</span><br><span class="line">                method.getReturnType() == Void.TYPE )&#123;</span><br><span class="line">            </span><br><span class="line">                <span class="keyword">char</span> propName[] = name.substring(<span class="string">"set"</span>.length()).toCharArray();</span><br><span class="line">            </span><br><span class="line">                propName[<span class="number">0</span>] = Character.toLowerCase( propName[<span class="number">0</span>] );</span><br><span class="line">                <span class="comment">// 如果调用setSampleProperty方法，则触发一个事件PropertyChangeEvent</span></span><br><span class="line">                propertySupport.firePropertyChange( <span class="keyword">new</span> String( propName ) , <span class="keyword">null</span> , args[<span class="number">0</span>]);</span><br><span class="line">            </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> retValFromSuper;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String args[] )</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">        Bean  bean =  (Bean)newInstance( Bean.class );</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//为代理对象绑定一个PropertyChangeEvent监听器</span></span><br><span class="line">        bean.addPropertyChangeListener(</span><br><span class="line">        <span class="keyword">new</span> PropertyChangeListener()&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">propertyChange</span><span class="params">(PropertyChangeEvent evt)</span></span>&#123;</span><br><span class="line">                System.out.println(evt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        bean.setSampleProperty(<span class="string">"TEST"</span>);</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">base bean</span><br><span class="line">java.beans.PropertyChangeEvent[propertyName=sampleProperty; oldValue=null; newValue=TEST; propagationId=null; source=sampleProperty is TEST]</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p><p>Spring 是如何添加事务的呢？大概是这个样子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.Enhancer;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodInterceptor;</span><br><span class="line"><span class="keyword">import</span> net.sf.cglib.proxy.MethodProxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TxDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Dao</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String obj)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"save entity: "</span> + obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Proxy</span> <span class="keyword">implements</span> <span class="title">MethodInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Object <span class="title">intercept</span><span class="params">(Object o, Method method, Object[] objects, MethodProxy methodProxy)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">            Object retObj = <span class="keyword">null</span>;</span><br><span class="line">            System.out.println(<span class="string">"tx begin"</span>);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                retObj = methodProxy.invokeSuper(o, objects);</span><br><span class="line">                System.out.println(<span class="string">"tx commit"</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">                System.out.println(<span class="string">"tx rollback"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> retObj;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Enhancer enhancer = <span class="keyword">new</span> Enhancer();</span><br><span class="line">        enhancer.setSuperclass(Dao.class);</span><br><span class="line">        enhancer.setCallback(<span class="keyword">new</span> Proxy());</span><br><span class="line">        Dao got = (Dao) enhancer.create();</span><br><span class="line">        got.save(<span class="string">"user"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tx begin</span><br><span class="line">save entity: user</span><br><span class="line">tx commit</span><br><span class="line"></span><br><span class="line">Process finished with exit code 0</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JDK原生动态代理&quot;&gt;&lt;a href=&quot;#JDK原生动态代理&quot; class=&quot;headerlink&quot; title=&quot;JDK原生动态代理&quot;&gt;&lt;/a&gt;JDK原生动态代理&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/xiaoluo501
      
    
    </summary>
    
      <category term="java" scheme="https://github.com/carl-zk/blog/categories/java/"/>
    
    
      <category term="spring" scheme="https://github.com/carl-zk/blog/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>位运算检查加减乘除溢出</title>
    <link href="https://github.com/carl-zk/blog/2018/05/09/%E4%BD%8D%E8%BF%90%E7%AE%97%E9%98%B2%E8%B6%8A%E7%95%8C/"/>
    <id>https://github.com/carl-zk/blog/2018/05/09/位运算防越界/</id>
    <published>2018-05-09T01:23:47.000Z</published>
    <updated>2019-02-16T01:58:27.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h1><h2 id="amp"><a href="#amp" class="headerlink" title="&amp;"></a>&amp;</h2><h2 id><a href="#" class="headerlink" title="|"></a>|</h2><h2 id="-1"><a href="#-1" class="headerlink" title="~"></a>~</h2><h2 id="-2"><a href="#-2" class="headerlink" title="^"></a>^</h2><h2 id="lt-lt"><a href="#lt-lt" class="headerlink" title="&lt;&lt;"></a>&lt;&lt;</h2><h2 id="gt-gt"><a href="#gt-gt" class="headerlink" title="&gt;&gt;"></a>&gt;&gt;</h2><h2 id="gt-gt-gt"><a href="#gt-gt-gt" class="headerlink" title="&gt;&gt;&gt;"></a>&gt;&gt;&gt;</h2><h1 id="检查溢出"><a href="#检查溢出" class="headerlink" title="检查溢出"></a>检查溢出</h1><p>最贵的溢出代价：<a href="https://mp.weixin.qq.com/s/wbC9nkMnEQp5ixP3HVZmpg" target="_blank" rel="noopener">一行代码蒸发了¥6,447,277,680 人民币！</a><br>以减法为例：<br>A - B = C</p><table><thead><tr><th>A</th><th>B</th><th>正常结果</th><th>溢出结果</th></tr></thead><tbody><tr><td>&gt;0</td><td>&gt;0</td><td>不会溢出</td></tr><tr><td>&lt;0</td><td>&lt;0</td><td>不会溢出</td></tr><tr><td>&gt;0</td><td>&lt;0</td><td>&gt;0</td><td>&lt;0</td></tr><tr><td>&lt;0</td><td>&gt;0</td><td>&lt;0</td><td>&gt;0</td></tr><tr><td>0</td><td>-</td><td>不会溢出</td></tr><tr><td>-</td><td>0</td><td>不会溢出</td></tr></tbody></table><p>只有当A、B异号才有可能出现溢出，则<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeSubtract</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">long</span> val2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> diff = val1 - val2;</span><br><span class="line">    <span class="comment">// If there is a sign change, but the two values have different signs...</span></span><br><span class="line">    <span class="keyword">if</span> ((val1 ^ diff) &lt; <span class="number">0</span> &amp;&amp; (val1 ^ val2) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException</span><br><span class="line">            (<span class="string">"The calculation caused an overflow: "</span> + val1 + <span class="string">" - "</span> + val2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> diff;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>更多示例参考：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> *  Copyright 2001-2005 Stephen Colebourne</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> *  you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> *  You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *      http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> *  distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> *  See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> *  limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">package</span> org.joda.time.field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.joda.time.DateTimeField;</span><br><span class="line"><span class="keyword">import</span> org.joda.time.DateTimeFieldType;</span><br><span class="line"><span class="keyword">import</span> org.joda.time.IllegalFieldValueException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * General utilities that don't fit elsewhere.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * FieldUtils is thread-safe and immutable.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Stephen Colebourne</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FieldUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Restricted constructor.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">FieldUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//------------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Negates the input throwing an exception if it can't negate it.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value to negate</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the negated value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is Integer.MIN_VALUE</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">safeNegate</span><span class="params">(<span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (value == Integer.MIN_VALUE) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Integer.MIN_VALUE cannot be negated"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -value;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">safeAdd</span><span class="params">(<span class="keyword">int</span> val1, <span class="keyword">int</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = val1 + val2;</span><br><span class="line">        <span class="comment">// If there is a sign change, but the two values have the same sign...</span></span><br><span class="line">        <span class="keyword">if</span> ((val1 ^ sum) &lt; <span class="number">0</span> &amp;&amp; (val1 ^ val2) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException</span><br><span class="line">                (<span class="string">"The calculation caused an overflow: "</span> + val1 + <span class="string">" + "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Add two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeAdd</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">long</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> sum = val1 + val2;</span><br><span class="line">        <span class="comment">// If there is a sign change, but the two values have the same sign...</span></span><br><span class="line">        <span class="keyword">if</span> ((val1 ^ sum) &lt; <span class="number">0</span> &amp;&amp; (val1 ^ val2) &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException</span><br><span class="line">                (<span class="string">"The calculation caused an overflow: "</span> + val1 + <span class="string">" + "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Subtracts two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value, to be taken away from</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value, the amount to take away</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeSubtract</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">long</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> diff = val1 - val2;</span><br><span class="line">        <span class="comment">// If there is a sign change, but the two values have different signs...</span></span><br><span class="line">        <span class="keyword">if</span> ((val1 ^ diff) &lt; <span class="number">0</span> &amp;&amp; (val1 ^ val2) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException</span><br><span class="line">                (<span class="string">"The calculation caused an overflow: "</span> + val1 + <span class="string">" - "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> diff;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Multiply two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">safeMultiply</span><span class="params">(<span class="keyword">int</span> val1, <span class="keyword">int</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> total = (<span class="keyword">long</span>) val1 * (<span class="keyword">long</span>) val2;</span><br><span class="line">        <span class="keyword">if</span> (total &lt; Integer.MIN_VALUE || total &gt; Integer.MAX_VALUE) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Multiplication overflows an int: "</span> + val1 + <span class="string">" * "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>) total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Multiply two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeMultiply</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">int</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (val2) &#123;</span><br><span class="line">            <span class="keyword">case</span> -<span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> (val1 == Long.MIN_VALUE) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Multiplication overflows a long: "</span> + val1 + <span class="string">" * "</span> + val2);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> -val1;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0L</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">return</span> val1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> total = val1 * val2;</span><br><span class="line">        <span class="keyword">if</span> (total / val2 != val1) &#123;</span><br><span class="line">          <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Multiplication overflows a long: "</span> + val1 + <span class="string">" * "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Multiply two values throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeMultiply</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">long</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (val2 == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> val1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (val1 == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> val2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (val1 == <span class="number">0</span> || val2 == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> total = val1 * val2;</span><br><span class="line">        <span class="keyword">if</span> (total / val2 != val1 || val1 == Long.MIN_VALUE &amp;&amp; val2 == -<span class="number">1</span> || val2 == Long.MIN_VALUE &amp;&amp; val1 == -<span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Multiplication overflows a long: "</span> + val1 + <span class="string">" * "</span> + val2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Divides the dividend by the divisor throwing an exception if </span></span><br><span class="line"><span class="comment">     * overflow occurs or the divisor is zero.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dividend  the dividend</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> divisor  the divisor</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the operation overflows or the divisor is zero</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">safeDivide</span><span class="params">(<span class="keyword">long</span> dividend, <span class="keyword">long</span> divisor)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dividend == Long.MIN_VALUE &amp;&amp; divisor == -<span class="number">1L</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Multiplication overflows a long: "</span> + dividend + <span class="string">" / "</span> + divisor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dividend / divisor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Casts to an int throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the value as an int</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">safeToInt</span><span class="params">(<span class="keyword">long</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (Integer.MIN_VALUE &lt;= value &amp;&amp; value &lt;= Integer.MAX_VALUE) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">int</span>) value;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ArithmeticException(<span class="string">"Value cannot fit in an int: "</span> + value);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Multiply two values to return an int throwing an exception if overflow occurs.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val1  the first value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> val2  the second value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the new total</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ArithmeticException if the value is too big or too small</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">safeMultiplyToInt</span><span class="params">(<span class="keyword">long</span> val1, <span class="keyword">long</span> val2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> val = FieldUtils.safeMultiply(val1, val2);</span><br><span class="line">        <span class="keyword">return</span> FieldUtils.safeToInt(val);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-----------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Verify that input values are within specified bounds.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value to check</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lowerBound  the lower bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> upperBound  the upper bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalFieldValueException if value is not in the specified bounds</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">verifyValueBounds</span><span class="params">(DateTimeField field, </span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="keyword">int</span> value, <span class="keyword">int</span> lowerBound, <span class="keyword">int</span> upperBound)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((value &lt; lowerBound) || (value &gt; upperBound)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalFieldValueException</span><br><span class="line">                (field.getType(), Integer.valueOf(value),</span><br><span class="line">                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Verify that input values are within specified bounds.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value to check</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lowerBound  the lower bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> upperBound  the upper bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalFieldValueException if value is not in the specified bounds</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">verifyValueBounds</span><span class="params">(DateTimeFieldType fieldType, </span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="keyword">int</span> value, <span class="keyword">int</span> lowerBound, <span class="keyword">int</span> upperBound)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((value &lt; lowerBound) || (value &gt; upperBound)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalFieldValueException</span><br><span class="line">                (fieldType, Integer.valueOf(value),</span><br><span class="line">                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Verify that input values are within specified bounds.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value to check</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lowerBound  the lower bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> upperBound  the upper bound allowed for value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalFieldValueException if value is not in the specified bounds</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">verifyValueBounds</span><span class="params">(String fieldName,</span></span></span><br><span class="line"><span class="function"><span class="params">                                         <span class="keyword">int</span> value, <span class="keyword">int</span> lowerBound, <span class="keyword">int</span> upperBound)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((value &lt; lowerBound) || (value &gt; upperBound)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalFieldValueException</span><br><span class="line">                (fieldName, Integer.valueOf(value),</span><br><span class="line">                 Integer.valueOf(lowerBound), Integer.valueOf(upperBound));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Utility method used by addWrapField implementations to ensure the new</span></span><br><span class="line"><span class="comment">     * value lies within the field's legal value range.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> currentValue the current value of the data, which may lie outside</span></span><br><span class="line"><span class="comment">     * the wrapped value range</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> wrapValue  the value to add to current value before</span></span><br><span class="line"><span class="comment">     *  wrapping.  This may be negative.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> minValue the wrap range minimum value.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxValue the wrap range maximum value.  This must be</span></span><br><span class="line"><span class="comment">     *  greater than minValue (checked by the method).</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the wrapped value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if minValue is greater</span></span><br><span class="line"><span class="comment">     *  than or equal to maxValue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getWrappedValue</span><span class="params">(<span class="keyword">int</span> currentValue, <span class="keyword">int</span> wrapValue,</span></span></span><br><span class="line"><span class="function"><span class="params">                                      <span class="keyword">int</span> minValue, <span class="keyword">int</span> maxValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> getWrappedValue(currentValue + wrapValue, minValue, maxValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Utility method that ensures the given value lies within the field's</span></span><br><span class="line"><span class="comment">     * legal value range.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> value  the value to fit into the wrapped value range</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> minValue the wrap range minimum value.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxValue the wrap range maximum value.  This must be</span></span><br><span class="line"><span class="comment">     *  greater than minValue (checked by the method).</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> the wrapped value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IllegalArgumentException if minValue is greater</span></span><br><span class="line"><span class="comment">     *  than or equal to maxValue</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getWrappedValue</span><span class="params">(<span class="keyword">int</span> value, <span class="keyword">int</span> minValue, <span class="keyword">int</span> maxValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (minValue &gt;= maxValue) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"MIN &gt; MAX"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> wrapRange = maxValue - minValue + <span class="number">1</span>;</span><br><span class="line">        value -= minValue;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (value &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (value % wrapRange) + minValue;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> remByRange = (-value) % wrapRange;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (remByRange == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span> + minValue;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (wrapRange - remByRange) + minValue;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//-----------------------------------------------------------------------</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Compares two objects as equals handling null.</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object1  the first object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> object2  the second object</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> true if equal</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@since</span> 1.4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object object1, Object object2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (object1 == object2) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (object1 == <span class="keyword">null</span> || object2 == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> object1.equals(object2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;位运算&quot;&gt;&lt;a href=&quot;#位运算&quot; class=&quot;headerlink&quot; title=&quot;位运算&quot;&gt;&lt;/a&gt;位运算&lt;/h1&gt;&lt;h2 id=&quot;amp&quot;&gt;&lt;a href=&quot;#amp&quot; class=&quot;headerlink&quot; title=&quot;&amp;amp;&quot;&gt;&lt;/a&gt;&amp;amp
      
    
    </summary>
    
      <category term="java" scheme="https://github.com/carl-zk/blog/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>神器：查Class所在jar包</title>
    <link href="https://github.com/carl-zk/blog/2018/05/09/%E7%A5%9E%E5%99%A8%EF%BC%9A%E6%9F%A5class%E6%89%80%E5%9C%A8jar%E5%8C%85/"/>
    <id>https://github.com/carl-zk/blog/2018/05/09/神器：查class所在jar包/</id>
    <published>2018-05-08T23:25:04.000Z</published>
    <updated>2019-02-16T01:58:27.859Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/wo541075754/article/details/48243403" target="_blank" rel="noopener">https://blog.csdn.net/wo541075754/article/details/48243403</a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">"text/html; charset=GBK"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> <span class="keyword">import</span>=<span class="string">"java.security.*,java.net.*,java.io.*"</span>%&gt;</span><br><span class="line">&lt;%!</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> URL <span class="title">getClassLocation</span><span class="params">(<span class="keyword">final</span> Class cls)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cls == <span class="keyword">null</span>)<span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"null input: cls"</span>);</span><br><span class="line">    URL result = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">final</span> String clsAsResource = cls.getName().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>);</span><br><span class="line">    <span class="keyword">final</span> ProtectionDomain pd = cls.getProtectionDomain();</span><br><span class="line">    <span class="comment">// java.lang.Class contract does not specify if 'pd' can ever be null;</span></span><br><span class="line">    <span class="comment">// it is not the case for Sun's implementations, but guard against null</span></span><br><span class="line">    <span class="comment">// just in case:</span></span><br><span class="line">    <span class="keyword">if</span> (pd != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">final</span> CodeSource cs = pd.getCodeSource();</span><br><span class="line">      <span class="comment">// 'cs' can be null depending on the classloader behavior:</span></span><br><span class="line">      <span class="keyword">if</span> (cs != <span class="keyword">null</span>) result = cs.getLocation();</span><br><span class="line">      <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Convert a code source location into a full class file location</span></span><br><span class="line">        <span class="comment">// for some common cases:</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"file"</span>.equals(result.getProtocol())) &#123;</span><br><span class="line">          <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (result.toExternalForm().endsWith(<span class="string">".jar"</span>) ||</span><br><span class="line">                result.toExternalForm().endsWith(<span class="string">".zip"</span>))</span><br><span class="line">              result = <span class="keyword">new</span> URL(<span class="string">"jar:"</span>.concat(result.toExternalForm())</span><br><span class="line">                               .concat(<span class="string">"!/"</span>).concat(clsAsResource));</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">new</span> File(result.getFile()).isDirectory())</span><br><span class="line">              result = <span class="keyword">new</span> URL(result, clsAsResource);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">catch</span> (MalformedURLException ignore) &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="comment">// Try to find 'cls' definition as a resource; this is not</span></span><br><span class="line">      <span class="comment">// document．d to be legal, but Sun's implementations seem to         //allow this:</span></span><br><span class="line">      <span class="keyword">final</span> ClassLoader clsLoader = cls.getClassLoader();</span><br><span class="line">      result = clsLoader != <span class="keyword">null</span> ?</span><br><span class="line">          clsLoader.getResource(clsAsResource) :</span><br><span class="line">          ClassLoader.getSystemResource(clsAsResource);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;srcAdd.jar&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor=<span class="string">"#ffffff"</span>&gt;</span><br><span class="line">  使用方法，className参数为类的全名，不需要.class后缀，如</span><br><span class="line">  srcAdd.jsp?className=java.net.URL</span><br><span class="line">&lt;%</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">  String classLocation = <span class="keyword">null</span>;</span><br><span class="line">  String error = <span class="keyword">null</span>;</span><br><span class="line">  String className = request.getParameter(<span class="string">"className"</span>);</span><br><span class="line"></span><br><span class="line">  classLocation =  <span class="string">""</span>+getClassLocation(Class.forName(className));</span><br><span class="line">  <span class="keyword">if</span> (error == <span class="keyword">null</span>) &#123;</span><br><span class="line">    out.print(<span class="string">"类"</span> + className + <span class="string">"实例的物理文件位于："</span>);</span><br><span class="line">    out.print(<span class="string">"&lt;hr&gt;"</span>);</span><br><span class="line">    out.print(classLocation);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    out.print(<span class="string">"类"</span> + className + <span class="string">"没有对应的物理文件。&lt;br&gt;"</span>);</span><br><span class="line">    out.print(<span class="string">"错误："</span> + error);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span>(Exception e)</span><br><span class="line">&#123;</span><br><span class="line">  out.print(<span class="string">"异常。"</span>+e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.security.CodeSource;</span><br><span class="line"><span class="keyword">import</span> java.security.ProtectionDomain;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReflectTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> URL <span class="title">getClassLocation</span><span class="params">(<span class="keyword">final</span> Class clazz)</span> </span>&#123;</span><br><span class="line">        Objects.requireNonNull(clazz);</span><br><span class="line">        URL result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> String classAsResource = clazz.getName().replace(<span class="string">'.'</span>, <span class="string">'/'</span>).concat(<span class="string">".class"</span>);</span><br><span class="line">        <span class="keyword">final</span> ProtectionDomain protectionDomain = clazz.getProtectionDomain();</span><br><span class="line">        <span class="keyword">if</span> (protectionDomain != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> CodeSource codeSource = protectionDomain.getCodeSource();</span><br><span class="line">            <span class="keyword">if</span> (codeSource != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result = codeSource.getLocation();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (result != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"file"</span>.equals(result.getProtocol())) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="string">".jar"</span>.equals(result.toExternalForm()) || <span class="string">".zip"</span>.equals(result.toExternalForm())) &#123;</span><br><span class="line">                            result = <span class="keyword">new</span> URL(<span class="string">"jar:"</span>.concat(result.toExternalForm()).concat(<span class="string">"!/"</span>).concat(classAsResource));</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">new</span> File(result.getFile()).isDirectory()) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">new</span> URL(result, classAsResource);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> ClassLoader classLoader = clazz.getClassLoader();</span><br><span class="line">            result = classLoader != <span class="keyword">null</span> ? classLoader.getResource(classAsResource) : ClassLoader.getSystemResource(classAsResource);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        URL location = getClassLocation(String.class);</span><br><span class="line">        System.out.println(location);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/wo541075754/article/details/48243403&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/wo541075754/art
      
    
    </summary>
    
      <category term="java" scheme="https://github.com/carl-zk/blog/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>MySQL数据修复</title>
    <link href="https://github.com/carl-zk/blog/2018/04/27/MySQL%E6%95%B0%E6%8D%AE%E4%BF%AE%E5%A4%8D/"/>
    <id>https://github.com/carl-zk/blog/2018/04/27/MySQL数据修复/</id>
    <published>2018-04-27T14:43:44.000Z</published>
    <updated>2019-02-16T01:58:27.788Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>A、B数据库使用otter实时同步，但是有数据不一致情况，需要做数据修复。<br>因为没有找到合适的工具，所以自己写了些脚本来做处理，配合人工检查和过滤，99.9%的数据得以修复。</p></blockquote><h2 id="思路："><a href="#思路：" class="headerlink" title="思路："></a>思路：</h2><ol><li>以A、B中的同一张表t举例，首先拿到 A.t 和 B.t 的INSERT语句，提取ID相同的不同数据；</li><li>拼接update语句：<br>a. ID为奇数，取A.t中的数据；<br>b. ID为偶数，取B.t中的数据；</li><li>在A、B中执行此update即可。   </li></ol><p>具体实现与思路不一致，下面是具体实现。</p><h2 id="第一步，找不同"><a href="#第一步，找不同" class="headerlink" title="第一步，找不同"></a>第一步，找不同</h2><ol><li>取表名；</li><li>导出每张表，提取数据，每行一条；</li><li>比较出两个库不同的部分；<br>统计结果在stat.txt中，只包含ID相同value不同的情况。</li></ol><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">## 统计不同数据的表，分析</span></span><br><span class="line"></span><br><span class="line">. /Users/hero/.zshrc</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.取表名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"step 1 : 取表名"</span></span><br><span class="line"><span class="built_in">echo</span> `mysql -uroot -ppasswd -hlocalhost &lt;&lt; EOF</span><br><span class="line">use shanghai;</span><br><span class="line">SELECT table_name FROM information_schema.tables <span class="built_in">where</span> table_schema=<span class="string">'shanghai'</span> and table_name like <span class="string">'nh%'</span> and table_name not like <span class="string">'%_reference'</span>;</span><br><span class="line"></span><br><span class="line">EOF` &gt; tables.txt</span><br><span class="line">sed -E -e <span class="string">'s/\t/ /g'</span> -e <span class="string">'s/ +/\n/g'</span> tables.txt | tail -n +2 &gt; alltables</span><br><span class="line">rm tables.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat alltables`;<span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.提取diff</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'step 2 : 提取diff'</span></span><br><span class="line"><span class="comment">#from</span></span><br><span class="line">url_from=localhost</span><br><span class="line">user_from=root</span><br><span class="line">password_from=passwd</span><br><span class="line">schema_from=shanghai</span><br><span class="line"><span class="comment">#to</span></span><br><span class="line">url_to=localhost</span><br><span class="line">user_to=root</span><br><span class="line">password_to=passwd</span><br><span class="line">schema_to=hongkong</span><br><span class="line"></span><br><span class="line">rm -rf from</span><br><span class="line">mkdir from</span><br><span class="line">rm -rf to</span><br><span class="line">mkdir to</span><br><span class="line">rm -rf diff</span><br><span class="line">mkdir diff</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cat alltables`; <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"`date '+%H:%M:%S'` compare table ---&gt; "</span><span class="variable">$i</span><span class="string">"\n"</span></span><br><span class="line">  mysqldump -h<span class="variable">$url_from</span> -u<span class="variable">$user_from</span> -p<span class="variable">$password_from</span> --single-transaction <span class="variable">$schema_from</span> <span class="variable">$i</span> -r from/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">  mysqldump -h<span class="variable">$url_to</span> -u<span class="variable">$user_to</span> -p<span class="variable">$password_to</span> --single-transaction <span class="variable">$schema_to</span> <span class="variable">$i</span> -r to/<span class="variable">$&#123;i&#125;</span></span><br><span class="line">  grep <span class="string">"^INSERT"</span> from/<span class="variable">$&#123;i&#125;</span> | sed -e <span class="string">'s/INSERT.*VALUES //g'</span> -e <span class="string">'s/),/)\n/g'</span> -e <span class="string">'s/);/)\n/g'</span> &gt; from/<span class="variable">$&#123;i&#125;</span>.ok</span><br><span class="line">  grep <span class="string">"^INSERT"</span> to/<span class="variable">$&#123;i&#125;</span> | sed -e <span class="string">'s/INSERT.*VALUES //g'</span> -e <span class="string">'s/),/)\n/g'</span> -e <span class="string">'s/);/)\n/g'</span> &gt; to/<span class="variable">$&#123;i&#125;</span>.ok</span><br><span class="line">  diff from/<span class="variable">$&#123;i&#125;</span>.ok to/<span class="variable">$&#123;i&#125;</span>.ok &gt; diff/<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">find diff/ -empty -delete</span><br><span class="line"></span><br><span class="line"><span class="comment">#3.统计</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'统计'</span></span><br><span class="line">FILE=stat.txt</span><br><span class="line">TMP=stat.txt.tmp</span><br><span class="line">&gt;<span class="variable">$FILE</span></span><br><span class="line">&gt;<span class="variable">$TMP</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls diff/`; <span class="keyword">do</span></span><br><span class="line">  sh=`grep <span class="string">'^&lt;'</span> diff/<span class="variable">$i</span> | wc -l`</span><br><span class="line">  ho=`grep <span class="string">'^&gt;'</span> diff/<span class="variable">$i</span> | wc -l`</span><br><span class="line">  <span class="built_in">echo</span> <span class="variable">$i</span> <span class="variable">$sh</span> <span class="variable">$ho</span> &gt;&gt; <span class="variable">$TMP</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">sort -n -k 2 <span class="variable">$TMP</span> &gt; <span class="variable">$FILE</span></span><br><span class="line">rm <span class="variable">$TMP</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'统计结果：stat.txt'</span></span><br><span class="line"></span><br><span class="line">mv stat.txt stat.txt.old</span><br><span class="line">cp stat.txt.old stat.txt.`date +%Y%m%d%H%M%S`</span><br><span class="line"></span><br><span class="line">awk -F <span class="string">'[ ]'</span> <span class="string">'&#123;if($2==$3)printf("%s\n", $0)&#125;'</span> stat.txt.old &gt;&gt; stat.txt</span><br></pre></td></tr></table></figure><h2 id="第二步，根据ID奇偶取数"><a href="#第二步，根据ID奇偶取数" class="headerlink" title="第二步，根据ID奇偶取数"></a>第二步，根据ID奇偶取数</h2><p>在取ID的时候有一个假设，即每个表的ID都是第一个字段。<br>这样有个问题，ID不在第一个的表无法拿到它的ID；不过问题不大，因为我会对batch.sql做筛选。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">## 根据id奇偶性获取不同数据表的insert语句</span></span><br><span class="line">LOG=<span class="built_in">log</span></span><br><span class="line">&gt;<span class="variable">$LOG</span></span><br><span class="line"><span class="built_in">exec</span> 1&gt;&gt;<span class="variable">$LOG</span> 2&gt;&amp;1</span><br><span class="line"></span><br><span class="line">rm -rf extr</span><br><span class="line">mkdir extr</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls diff/`; <span class="keyword">do</span></span><br><span class="line">  grep <span class="string">'^&gt;'</span> diff/<span class="variable">$i</span> &gt; extr/<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">find extr/ -empty -delete</span><br><span class="line"></span><br><span class="line">rm -rf ids</span><br><span class="line">mkdir ids</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls extr/`; <span class="keyword">do</span></span><br><span class="line">  awk -F <span class="string">'[(,]'</span> <span class="string">'&#123;printf("%s\n", $2)&#125;'</span> extr/<span class="variable">$i</span> &gt; ids/<span class="variable">$&#123;i&#125;</span>.tmp</span><br><span class="line">  cat ids/<span class="variable">$&#123;i&#125;</span>.tmp | grep -v <span class="string">'^$'</span> | sort | uniq &gt; ids/<span class="variable">$i</span></span><br><span class="line">  rm ids/<span class="variable">$&#123;i&#125;</span>.tmp</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 奇数 上海</span></span><br><span class="line">&gt;batch.sql</span><br><span class="line">SHANG=shanghai</span><br><span class="line">HONG=hongkong</span><br><span class="line">rm -rf jiou</span><br><span class="line">mkdir jiou</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls ids/`; <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">read</span> id; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$id</span> <span class="variable">$i</span>"</span></span><br><span class="line">    <span class="keyword">if</span> (( (( <span class="variable">$id</span> % 2 )) == 0 )); <span class="keyword">then</span></span><br><span class="line">     schema=<span class="variable">$HONG</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">     schema=<span class="variable">$SHANG</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"mysqldump -hlocalhost -uroot -ppasswd --single-transaction <span class="variable">$schema</span> <span class="variable">$i</span> --where=\"id=<span class="variable">$id</span>\" &gt;&gt; jiou/<span class="variable">$i</span>"</span> &gt;&gt; batch.sql</span><br><span class="line">  <span class="keyword">done</span> &lt; ids/<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'get batch.sql'</span></span><br><span class="line">rm -rf jiou</span><br><span class="line">mkdir jiou</span><br><span class="line"> </span><br><span class="line"><span class="built_in">echo</span> <span class="string">'有问题的表：'</span></span><br><span class="line">grep -arl <span class="string">"NULL"</span> ids/</span><br><span class="line">grep <span class="string">'^NULL'</span> <span class="variable">$LOG</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'根据log筛选batch.sql, 然后执行 sh batch.sql'</span></span><br></pre></td></tr></table></figure></p><p><strong>一定要记得根据log对batch.sql做筛除，然后执行batch.sql，这样就拿到了根据ID的奇偶性获取的元数据</strong></p><h2 id="第三步，insert、update、remove-tmp脚本"><a href="#第三步，insert、update、remove-tmp脚本" class="headerlink" title="第三步，insert、update、remove_tmp脚本"></a>第三步，insert、update、remove_tmp脚本</h2><p>对元数据处理，拿到insert语句。创建临时表xxx_tmp将数据插入临时表中，然后根据临时表来更新A(B)，最后删除临时表。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 整理表结构</span></span><br><span class="line"></span><br><span class="line">rm -rf insert</span><br><span class="line">mkdir insert</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls jiou/`; <span class="keyword">do</span></span><br><span class="line">  grep -aoE <span class="string">'INSERT .*);'</span> jiou/<span class="variable">$i</span> &gt; insert/<span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -rf struct</span><br><span class="line">mkdir struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls insert/`; <span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> `mysql -uroot -ppasswd -hlocalhost &lt;&lt;-EOF</span><br><span class="line">select column_name from information_schema.columns <span class="built_in">where</span> table_schema=<span class="string">'hongkong'</span> and table_name=<span class="string">'$i'</span></span><br><span class="line"></span><br><span class="line">EOF` &gt; struct/<span class="variable">$i</span></span><br><span class="line">gsed -e <span class="string">'s/ /\n/g'</span> struct/<span class="variable">$i</span> | tail -n +3 &gt; struct/<span class="variable">$&#123;i&#125;</span>.ok</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;update.sql</span><br><span class="line">&gt;insert.sql</span><br><span class="line">&gt;remove_tmp.sql</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls insert/`; <span class="keyword">do</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"create table <span class="variable">$&#123;i&#125;</span>_tmp as select * from <span class="variable">$i</span> where 1!=1;"</span> &gt;&gt; insert.sql</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">"drop table <span class="variable">$&#123;i&#125;</span>_tmp;"</span> &gt;&gt; remove_tmp.sql</span><br><span class="line"> gsed -i <span class="string">"s/<span class="variable">$&#123;i&#125;</span>/<span class="variable">$&#123;i&#125;</span>_tmp/g"</span> insert/<span class="variable">$i</span></span><br><span class="line"> cat insert/<span class="variable">$i</span> &gt;&gt; insert.sql</span><br><span class="line"> <span class="built_in">printf</span> %s <span class="string">"update <span class="variable">$i</span> a, <span class="variable">$&#123;i&#125;</span>_tmp b set "</span> &gt;&gt; update.sql</span><br><span class="line"> awk <span class="string">'&#123;printf("a.%s=b.%s,", $1, $1)&#125;'</span> struct/<span class="variable">$&#123;i&#125;</span>.ok &gt;&gt; update.sql</span><br><span class="line"> <span class="built_in">echo</span> <span class="string">" where a.id=b.id;"</span> &gt;&gt; update.sql</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">gsed -i <span class="string">'s/, where/ where/g'</span> update.sql</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'执行insert.sql--&gt;update.sql---&gt;remove_tmp.sql'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"mysql -uroot -ppasswd --binary-mode=1 &lt; insert.sql"</span></span><br></pre></td></tr></table></figure></p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>新建一个子目录，然后执行第一个脚本，拿到stat.txt验证数据修复结果。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;A、B数据库使用otter实时同步，但是有数据不一致情况，需要做数据修复。&lt;br&gt;因为没有找到合适的工具，所以自己写了些脚本来做处理，配合人工检查和过滤，99.9%的数据得以修复。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;思路：&quot;&gt;&lt;a
      
    
    </summary>
    
    
      <category term="MySQL" scheme="https://github.com/carl-zk/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="https://github.com/carl-zk/blog/2018/04/26/redis/"/>
    <id>https://github.com/carl-zk/blog/2018/04/26/redis/</id>
    <published>2018-04-26T01:14:31.000Z</published>
    <updated>2019-02-16T01:58:27.797Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-安装启动"><a href="#Redis-安装启动" class="headerlink" title="Redis 安装启动"></a>Redis 安装启动</h2><p><a href="https://redis.io/download" target="_blank" rel="noopener">download</a><br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mv redis.tar.gz /redis</span><br><span class="line">tar xvzf redis.tar.gz</span><br><span class="line">mv redis-4.0 server</span><br><span class="line"><span class="built_in">cd</span> server</span><br><span class="line">make</span><br><span class="line">make <span class="built_in">test</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">cp server/redis.conf .</span><br><span class="line">cp server/utils/redis_init_script .</span><br></pre></td></tr></table></figure></p><p>目录结构：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/redis</span><br><span class="line">    /server</span><br><span class="line">    /storage</span><br><span class="line">redis.conf</span><br><span class="line">redis_init_script</span><br><span class="line">start</span><br><span class="line">stop</span><br></pre></td></tr></table></figure></p><p>redis.conf<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">port 6397</span><br><span class="line">pidfile /redis/redis_<span class="variable">$&#123;port&#125;</span>.pid</span><br><span class="line">logfile <span class="string">"/redis/my.log"</span></span><br><span class="line">dir /redis/storage</span><br><span class="line"><span class="comment">#bind 127.0.0.1</span></span><br><span class="line">requirepass password</span><br></pre></td></tr></table></figure></p><p>redis_init_script<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Simple Redis init.d script conceived to work on Linux systems</span></span><br><span class="line"><span class="comment"># as it does use of the /proc filesystem.</span></span><br><span class="line"></span><br><span class="line">REDISPORT=6397</span><br><span class="line">PASSWORD=password</span><br><span class="line">EXEC=/redis/server/src/redis-server</span><br><span class="line">CLIEXEC=/redis/server/src/redis-cli</span><br><span class="line"></span><br><span class="line">PIDFILE=/redis/redis_<span class="variable">$&#123;REDISPORT&#125;</span>.pid</span><br><span class="line">CONF=<span class="string">"/redis/redis.conf"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">"<span class="variable">$1</span>"</span> <span class="keyword">in</span></span><br><span class="line">    start)</span><br><span class="line">        <span class="keyword">if</span> [ -f <span class="variable">$PIDFILE</span> ]</span><br><span class="line">        <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"<span class="variable">$PIDFILE</span> exists, process is already running or crashed"</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">"Starting Redis server..."</span></span><br><span class="line">                <span class="variable">$EXEC</span> <span class="variable">$CONF</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">        ;;</span><br><span class="line">    stop)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Stopping ..."</span></span><br><span class="line">        <span class="variable">$CLIEXEC</span> -p <span class="variable">$REDISPORT</span> -a <span class="variable">$PASSWORD</span> shutdown</span><br><span class="line">        <span class="keyword">while</span> [ -x /proc/<span class="variable">$&#123;PID&#125;</span> ]; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">"Waiting for Redis to shutdown ..."</span></span><br><span class="line">            sleep 1</span><br><span class="line">            <span class="keyword">done</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Redis stopped"</span></span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"Please use start or stop as first argument"</span></span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure></p><p>运行起来没有看到pid文件，所以修改了stop分支。(原来只有daemonize yes时才有pid文件)</p><p>start<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">/redis/redis_init_script start &amp;</span><br><span class="line"></span><br><span class="line">ps -ef | grep redis-server</span><br></pre></td></tr></table></figure></p><p>stop<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line">/redis/redis_init_script stop</span><br><span class="line"></span><br><span class="line">ps -ef | grep redis-server</span><br></pre></td></tr></table></figure></p><h3 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h3><p>Redis-Server(Main)</p><ul><li>Redis-Server(Slave)</li><li>Redis-Server(Slave)</li><li>Redis-Server(Slave)<br>一台主机作为写入，三台从机作为读取，这样就缓解了主机的压力。<br>Redis支持两种方式的主从配置：<ol><li>redis.conf；</li><li>cli.slaveOf(ip:port)</li></ol></li></ul><p>实验中发现即使kill -9 主机，从机还是可以读到值。只能证明Redis能处理kill方式的停机，并不能保证宕机时也能如此优雅。</p><p><a href="https://blog.csdn.net/u011204847/article/details/51307044" target="_blank" rel="noopener">Redis集群</a><br>大神的博客，需要好好拜读。</p><h2 id="Redis实现锁的简单方法"><a href="#Redis实现锁的简单方法" class="headerlink" title="Redis实现锁的简单方法"></a>Redis实现锁的简单方法</h2><p><a href="http://redisdoc.com/string/set.html" target="_blank" rel="noopener">SET</a></p><p><code>SET key value [EX seconds] [PX milliseconds] [NX|XX]</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">EX second ：设置键的过期时间为 second 秒。 SET key value EX second 效果等同于 SETEX key second value 。</span><br><span class="line">PX millisecond ：设置键的过期时间为 millisecond 毫秒。 SET key value PX millisecond 效果等同于 PSETEX key millisecond value 。</span><br><span class="line">NX ：只在键不存在时，才对键进行设置操作。 SET key value NX 效果等同于 SETNX key value 。</span><br><span class="line">XX ：只在键已经存在时，才对键进行设置操作。</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> moc.oreh.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Stateless Redis Lock</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * examples:</span></span><br><span class="line"><span class="comment"> * 1. tryLock</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * boolean got = JedisLock.tryLock(key, token, time, TimeUnit, jedis);</span></span><br><span class="line"><span class="comment"> * if (got) &#123;</span></span><br><span class="line"><span class="comment"> * try &#123;</span></span><br><span class="line"><span class="comment"> * // do something</span></span><br><span class="line"><span class="comment"> * &#125; finally &#123;</span></span><br><span class="line"><span class="comment"> * JedisLock.unlock(key, token, jedis);</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 2. lock</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * JedisLock.lock(key, token, jedis);</span></span><br><span class="line"><span class="comment"> * try &#123;</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * &#125; finally &#123;</span></span><br><span class="line"><span class="comment"> * JedisLock.unlock(key, token, jedis);</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisLock</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">unlock</span><span class="params">(String key, String token, Jedis jedis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (token.equals(jedis.get(key))) &#123;</span><br><span class="line">            jedis.del(key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">(String key, String token, Jedis jedis)</span> </span>&#123;</span><br><span class="line">        isValidKey(key, jedis);</span><br><span class="line">        <span class="keyword">while</span> (!tryLock(key, token, jedis)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.MILLISECONDS.sleep(INTERVAL_IN_MILLIS);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">isValidKey</span><span class="params">(String key, Jedis jedis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> ttl = jedis.ttl(key);</span><br><span class="line">        <span class="keyword">if</span> (ttl == -<span class="number">1</span>) &#123;</span><br><span class="line">            String val = jedis.get(key);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Error(<span class="string">"redis lock encounter an unexpired key : "</span> + key + <span class="string">", value : "</span> + val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INTERVAL_IN_MILLIS = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> token</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeout</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeUnit</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jedis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String key, String token, <span class="keyword">long</span> timeout, TimeUnit timeUnit, Jedis jedis)</span> </span>&#123;</span><br><span class="line">        timeout = TimeUnit.MILLISECONDS.convert(timeout, timeUnit);</span><br><span class="line">        <span class="keyword">boolean</span> got = tryLock(key, token, jedis);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (!got &amp;&amp; timeout &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                TimeUnit.MILLISECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            got = tryLock(key, token, jedis);</span><br><span class="line">            timeout -= INTERVAL_IN_MILLIS;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> got;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> EXPIRED_TIME_IN_SECONDS = <span class="number">60</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">tryLock</span><span class="params">(String key, String token, Jedis jedis)</span> </span>&#123;</span><br><span class="line">        String got = jedis.set(key, token, <span class="string">"NX"</span>, <span class="string">"EX"</span>, EXPIRED_TIME_IN_SECONDS);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"OK"</span>.equals(got);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此锁的特点：</p><ol><li>独占式、不可重入；</li><li>tryLock 响应中断的方式为直接返回false；</li><li>EXPIRED_TIME_IN_SECONDS 为 60，可根据业务场景做相应修改；</li></ol><p>为什么会这样设计？<br>借助Redis的set实现的锁，旨在于保持Redis高速特性的同时具有一定的并发控制，</p><ol><li>没有重入场景；</li><li>没有wait、notify机制，并且wait具有时效性，可以不响应中断，但是为了方便停服务，所以直接return false；</li><li>为什么不使用set(key, token, “NX”)而要给锁加一个过期时间？是因为如果a、b共用一个Redis server，其中a突然挂了，那么a设置的key就永远都不过期，b就永远拿不到这个key的锁。</li></ol><p>适用于竞争不激烈的场景，如果对锁的竞争很激烈，或者需要重入，请使用Redisson。</p><p>Redis 连接池<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">JedisPoolConfig config = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">config.setMaxTotal(<span class="number">100</span>);</span><br><span class="line">config.setMaxIdle(<span class="number">50</span>);</span><br><span class="line">config.setMinIdle(<span class="number">10</span>);</span><br><span class="line">pool = <span class="keyword">new</span> JedisPool(config, <span class="string">"localhost"</span>, <span class="number">6397</span>);</span><br><span class="line"></span><br><span class="line">Jedis jedis = pool.getResource();</span><br></pre></td></tr></table></figure></p><p><a href="/blog/2018/04/26/redis/JedisTest.txt">JedisTest</a></p><h2 id="Redis-Client"><a href="#Redis-Client" class="headerlink" title="Redis-Client"></a>Redis-Client</h2><p><a href="https://github.com/xetorthio/jedis/wiki/AdvancedUsage">redis client jedis</a><br>small、easy to use.</p><p><a href="https://github.com/redisson/redisson">redis client redisson</a><br>感觉就像是对着jdk的API重写了一遍Redis版的实现一样。为了实现tryLock(time, timeUnit)接口，它在内部使用了Redis的pub/sub框架，这样就可以实现wait/notify机制，虽然原本我也想这么搞来着，但是这样的实现太“重”，现有业务暂时用不到。</p><p><a href="https://github.com/lettuce-io/lettuce-core">redis client lettuce-core</a><br>看粉丝的数量远不如redisson，但是它跟redisson的功能不同，它更适合事件驱动的应用，底层用了netty。事件驱动的应用最适合用它了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Redis-安装启动&quot;&gt;&lt;a href=&quot;#Redis-安装启动&quot; class=&quot;headerlink&quot; title=&quot;Redis 安装启动&quot;&gt;&lt;/a&gt;Redis 安装启动&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://redis.io/download&quot; ta
      
    
    </summary>
    
    
      <category term="redis" scheme="https://github.com/carl-zk/blog/tags/redis/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate</title>
    <link href="https://github.com/carl-zk/blog/2018/04/19/hibernate/"/>
    <id>https://github.com/carl-zk/blog/2018/04/19/hibernate/</id>
    <published>2018-04-19T14:30:51.000Z</published>
    <updated>2019-02-16T01:58:27.794Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hibernate-结果集映射"><a href="#hibernate-结果集映射" class="headerlink" title="hibernate 结果集映射"></a>hibernate 结果集映射</h1><p><a href="http://peijunlin2008.iteye.com/blog/1269266" target="_blank" rel="noopener">http://peijunlin2008.iteye.com/blog/1269266</a></p><h2 id="Result-gt-Map"><a href="#Result-gt-Map" class="headerlink" title="Result -&gt; Map"></a>Result -&gt; Map</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Map&gt; phoneCallTotalDurations = entityManager.createQuery(</span><br><span class="line">    <span class="string">"select new map("</span> +</span><br><span class="line">    <span class="string">"    p.number as phoneNumber , "</span> +</span><br><span class="line">    <span class="string">"    sum(c.duration) as totalDuration, "</span> +</span><br><span class="line">    <span class="string">"    avg(c.duration) as averageDuration "</span> +</span><br><span class="line">    <span class="string">")  "</span> +</span><br><span class="line">    <span class="string">"from Call c "</span> +</span><br><span class="line">    <span class="string">"join c.phone p "</span> +</span><br><span class="line">    <span class="string">"group by p.number "</span>, Map.class )</span><br><span class="line">.getResultList();</span><br></pre></td></tr></table></figure><p>需要注意的点：<br>like 的写法；(in的写法类似：key in (:scope))<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.hibernate.SQLQuery;</span><br><span class="line"><span class="keyword">import</span> org.hibernate.transform.Transformers;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;xxxVo&gt; <span class="title">listAllMembers</span><span class="params">(Long orderUsedTimeId, String keyword, Integer page, Integer count)</span> </span>&#123;</span><br><span class="line">    String haskey = <span class="string">"select u.id, u.nickname, u.background, u.portrait, c.name as companyName, case when m.id is null then '0' else '1' end as isInvited from t_user u join t_company c on u.companyId=c.id left join t_meetinginvitationrecord m on u.id=m.beInvitedUserId and m.orderUsedTimeId=:orderUsedTimeId where u.nickname like :keyword"</span>;</span><br><span class="line">    List&lt;Map&gt; list = Member.entityManager()</span><br><span class="line">                .createNativeQuery(haskey)</span><br><span class="line">                .setParameter(<span class="string">"keyword"</span>, <span class="string">"%"</span> + keyword + <span class="string">"%"</span>)</span><br><span class="line">                .setParameter(<span class="string">"orderUsedTimeId"</span>, orderUsedTimeId)</span><br><span class="line">                .setFirstResult((page - <span class="number">1</span>) * count)</span><br><span class="line">                .setMaxResults(count)</span><br><span class="line">                .unwrap(SQLQuery.class).setResultTransformer(Transformers.ALIAS_TO_ENTITY_MAP).list();</span><br><span class="line">    List&lt;xxxVo&gt; result = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    list.forEach(item -&gt; &#123;</span><br><span class="line">        BigInteger id = (BigInteger) item.get(<span class="string">"id"</span>);</span><br><span class="line">        String nickname = (String) item.get(<span class="string">"nickname"</span>);</span><br><span class="line">        String background = (String) item.get(<span class="string">"background"</span>);</span><br><span class="line">        String portrait = (String) item.get(<span class="string">"portrait"</span>);</span><br><span class="line">        String companyName = (String) item.get(<span class="string">"companyName"</span>);</span><br><span class="line">        Boolean isInvited = ((String) item.get(<span class="string">"isInvited"</span>)).equals(<span class="string">"0"</span>) ? <span class="keyword">false</span> : <span class="keyword">true</span>;</span><br><span class="line">        result.add(<span class="keyword">new</span> xxxVo(id.longValue(), nickname, background, portrait, companyName, isInvited));</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="Result-gt-List-lt-gt"><a href="#Result-gt-List-lt-gt" class="headerlink" title="Result -&gt; List&lt;&gt;"></a>Result -&gt; List&lt;&gt;</h2><p>都不怎么好，非得选就推荐用它了。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Object[]&gt; persons = entityManager.createQuery(</span><br><span class="line">    <span class="string">"select distinct pr, ph "</span> +</span><br><span class="line">    <span class="string">"from Person pr, Phone ph "</span> +</span><br><span class="line">    <span class="string">"where ph.person = pr and ph is not null"</span>, Object[].class)</span><br><span class="line">.getResultList();</span><br></pre></td></tr></table></figure></p><h2 id="Result-gt-Stream-lt-gt"><a href="#Result-gt-Stream-lt-gt" class="headerlink" title="Result -&gt; Stream&lt;&gt;"></a>Result -&gt; Stream&lt;&gt;</h2><p><a href="http://hibernate.org/" target="_blank" rel="noopener">http://hibernate.org/</a><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> ( Stream&lt;Object[]&gt; persons = session.createQuery(</span><br><span class="line">    <span class="string">"select p.name, p.nickName "</span> +</span><br><span class="line">    <span class="string">"from Person p "</span> +</span><br><span class="line">    <span class="string">"where p.name like :name"</span> )</span><br><span class="line">.setParameter( <span class="string">"name"</span>, <span class="string">"J%"</span> )</span><br><span class="line">.stream() ) &#123;</span><br><span class="line"></span><br><span class="line">    persons</span><br><span class="line">    .map( row -&gt; <span class="keyword">new</span> PersonNames(</span><br><span class="line">            (String) row[<span class="number">0</span>],</span><br><span class="line">            (String) row[<span class="number">1</span>] ) )</span><br><span class="line">    .forEach( <span class="keyword">this</span>::process );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;hibernate-结果集映射&quot;&gt;&lt;a href=&quot;#hibernate-结果集映射&quot; class=&quot;headerlink&quot; title=&quot;hibernate 结果集映射&quot;&gt;&lt;/a&gt;hibernate 结果集映射&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://pe
      
    
    </summary>
    
    
      <category term="hibernate" scheme="https://github.com/carl-zk/blog/tags/hibernate/"/>
    
  </entry>
  
  <entry>
    <title>When IntelliJ Goes Fool</title>
    <link href="https://github.com/carl-zk/blog/2018/04/18/when-IntelliJ-goes-fool/"/>
    <id>https://github.com/carl-zk/blog/2018/04/18/when-IntelliJ-goes-fool/</id>
    <published>2018-04-17T16:20:47.000Z</published>
    <updated>2019-02-16T01:58:27.824Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>hehe</p></blockquote><p>当已经被公认是最好用的工具后，并且你已经使用了很久，而且它也从未让你感到失望。<br>直到出现某一时刻，它卡顿了，它莫名其妙的提示一些你关也关不掉的信息，<br>你终于被弄疯掉了！！！</p><p>这就是我这次使用IDEA的感受。</p><p>建的包‘moc.oreh’在没有mark源文件root时只是作为了一个文件夹的名字！这样idea就死活找不到某个类，提示信息只是‘can not resolve symbol ‘moc’ ’，懵懂的我可能太较真，关不掉这个提示信息让我无法忍受，所以我尝试了漫长的求知之旅。<br>我去<code>/Applications/IntelliJ IDEA.app/Contents</code>，<br><code>/Users/hero/Library/Preferences/IntelliJIdea2018.1</code>,<br><code>/Users/hero/Library/Caches/IntelliJIdea2018.1/caches</code><br>各个目录下备份、删除，才终于发现问题完美的重现，看来并不是配置搞错了，但是idea15的提示信息是如此的简洁，让我摸不到头脑，直到我安装了最新版本的idea，这个提示信息一下子让我明白了原来是两个包名成了一个文件名。</p><p>从这件事上可以学到：</p><ol><li>工具是如此的便利，但同时它也让你丢失了很多能力。</li><li>习惯一旦养成，就会按着期望去做事，不愿改变也不愿思考。</li><li>工具可能会由好变得更好，但人的演化是相反的。</li><li>第4点还没想好，不过我得先睡觉了。</li></ol><p>最好的编译器：idea；<br>最好的笔记本：Mac；<br>这些拿到了“最好的”头衔的东西，用起来还是会让人失望。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;hehe&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当已经被公认是最好用的工具后，并且你已经使用了很久，而且它也从未让你感到失望。&lt;br&gt;直到出现某一时刻，它卡顿了，它莫名其妙的提示一些你关也关不掉的信息，&lt;br&gt;你终于被弄疯掉了！！！&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mysql Server</title>
    <link href="https://github.com/carl-zk/blog/2018/04/06/mysql-server/"/>
    <id>https://github.com/carl-zk/blog/2018/04/06/mysql-server/</id>
    <published>2018-04-06T11:21:31.000Z</published>
    <updated>2019-02-16T01:58:27.796Z</updated>
    
    <content type="html"><![CDATA[<h4 id="忘记-root-密码"><a href="#忘记-root-密码" class="headerlink" title="忘记 root 密码"></a>忘记 root 密码</h4><blockquote><p>mysql server version : 5.7.9+</p></blockquote><p>查找MySQL sever 安装位置<br>sudo find / -name “mysqld”</p><ol><li>停服务<br>ps -ef|grep mysql<br>sudo kill -9 pid1 pid2            </li><li><p>重启</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqld_safe --skip-grant-tables &amp;</span><br></pre></td></tr></table></figure></li><li><p>登录<br>mysql -u root </p></li><li>重置密码<br>use mysql;<br>update user set authentication_string=’password’, password_expired = ‘N’ where User =’root’ and Host=’localhost’;<br>flush privileges;<br>exit;<br>停服务重新登录即可<br>sudo mysqld -uroot &amp;</li></ol><p>注意：Mac 上通过 System Preferences 启动的 server，其启动参数 -u 为 _mysql，在上述第2步之后，第3步改为<br>mysql -u _mysql<br>grant all privileges on <em>.</em> to ‘root‘@’%’ identified by ‘password’ with grant option;</p><h4 id="数据迁移"><a href="#数据迁移" class="headerlink" title="数据迁移"></a>数据迁移</h4><h5 id="导出工具"><a href="#导出工具" class="headerlink" title="导出工具"></a>导出工具</h5><p><a href="http://www.runoob.com/mysql/mysql-database-export.html" target="_blank" rel="noopener">MySQL数据导出</a></p><h6 id="mysqldump"><a href="#mysqldump" class="headerlink" title="mysqldump"></a>mysqldump</h6><ol><li>导出 sql<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hhost -uroot -ppassword <span class="comment">--single-transaction schema table -r </span></span><br><span class="line">dump.sql</span><br></pre></td></tr></table></figure></li></ol><p>导入：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">&gt;use databases;</span><br><span class="line">&gt;source /path/to/dump.sql</span><br></pre></td></tr></table></figure></p><ol start="2"><li>导出 tab<br>mysqldump -hhost -uroot -ppassword –tab=/Users/hero/tmp –fields-terminated-by=’^!’ –lines-terminated-by=’\n’ –single-transaction schema table</li></ol><h5 id="比较工具"><a href="#比较工具" class="headerlink" title="比较工具"></a>比较工具</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldbcompare --server1=root:密码@IP:3306 --server2=root:passwd@ip:3306 --difftype=sql schema1:schema2</span><br></pre></td></tr></table></figure><p> 如果schema含有非字母字符，<br> –difftype=sql “`nh-rel-x`:`nh-rel-x`“ –run-all-tests &gt; ~/tmp/res.txt</p><h4 id="比较脚本"><a href="#比较脚本" class="headerlink" title="比较脚本"></a>比较脚本</h4><blockquote><p>场景：在不影响生产的情况下拿A库与B库做比较，A与B分别在两个地方，用otter做了实时同步。但是otter有问题，不知道哪些数据同步有问题，所以需要逐表比对一下。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">. /Users/hero/.zshrc</span><br><span class="line"><span class="comment"># 取所有表名</span></span><br><span class="line">echo `mysql -uuser -ppasswd -hhost &lt;&lt;EOF</span><br><span class="line"><span class="keyword">SELECT</span> table_name <span class="keyword">FROM</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">'nh-rel-x'</span> <span class="keyword">and</span> table_name <span class="keyword">like</span> <span class="string">'nh%'</span> <span class="keyword">and</span> table_name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">'%_reference'</span>;</span><br><span class="line">EOF` &gt; tables.txt</span><br><span class="line"></span><br><span class="line">sed -E -e 's/\t/ /g' -e 's/ +/\n/g' tables.txt | tail -n +2 &gt; alltables.txt</span><br><span class="line">rm tables.txt</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">. /Users/hero/.zshrc</span><br><span class="line"><span class="comment">#from</span></span><br><span class="line">url_from=</span><br><span class="line">user_from=</span><br><span class="line">password_from=</span><br><span class="line">schema_from=</span><br><span class="line"><span class="comment">#to</span></span><br><span class="line">url_to=</span><br><span class="line">user_to=</span><br><span class="line">password_to=</span><br><span class="line">schema_to=</span><br><span class="line"></span><br><span class="line">rm -rf from</span><br><span class="line">mkdir from</span><br><span class="line">rm -rf to</span><br><span class="line">mkdir to</span><br><span class="line">rm -rf diff</span><br><span class="line">mkdir diff</span><br><span class="line"></span><br><span class="line">for i in `cat alltables.txt`; <span class="keyword">do</span></span><br><span class="line">  echo <span class="string">"`date '+%H:%M:%S'` compare table ---&gt; "</span>$i<span class="string">"\n"</span></span><br><span class="line">  mysqldump -h$url_from -u$user_from -p$password_from <span class="comment">--single-transaction $schema_from $i -r from/$&#123;i&#125;</span></span><br><span class="line">  mysqldump -h$url_to -u$user_to -p$password_to <span class="comment">--single-transaction $schema_to $i -r to/$&#123;i&#125;</span></span><br><span class="line">  grep <span class="string">"^INSERT"</span> <span class="keyword">from</span>/$&#123;i&#125; | sed -e <span class="string">'s/INSERT.*VALUES //g'</span> -e <span class="string">'s/),/)\n/g'</span> -e <span class="string">'s/);/)\n/g'</span> &gt; <span class="keyword">from</span>/$&#123;i&#125;.ok</span><br><span class="line">  grep <span class="string">"^INSERT"</span> <span class="keyword">to</span>/$&#123;i&#125; | sed -e <span class="string">'s/INSERT.*VALUES //g'</span> -e <span class="string">'s/),/)\n/g'</span> -e <span class="string">'s/);/)\n/g'</span> &gt; <span class="keyword">to</span>/$&#123;i&#125;.ok</span><br><span class="line">  diff <span class="keyword">from</span>/$&#123;i&#125;.ok <span class="keyword">to</span>/$&#123;i&#125;.ok &gt; diff/$i</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">find diff/ -<span class="keyword">empty</span> -<span class="keyword">delete</span></span><br><span class="line"></span><br><span class="line">&gt;report.txt</span><br><span class="line">tabs=<span class="string">`ls diff/`</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> $tabs; <span class="keyword">do</span></span><br><span class="line">  shanghai=<span class="string">`grep -c "^&lt;" diff/$t`</span></span><br><span class="line">  hongkong=<span class="string">`grep -c "^&gt;" diff/$t`</span></span><br><span class="line">  echo $t  $shanghai  $hongkong &gt;&gt; report.txt</span><br><span class="line">done</span><br><span class="line"><span class="keyword">sort</span> -n -k <span class="number">2</span> report.txt</span><br></pre></td></tr></table></figure><h4 id="mm"><a href="#mm" class="headerlink" title="mm"></a>mm</h4><p><code>mysql -uroot -ppassword &lt; init.sql</code><br>init.sql<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mydb;</span><br><span class="line"><span class="comment">#创建用户表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> t_user (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> auto_increment PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">        <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">        <span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">64</span>),</span><br><span class="line">        credits <span class="built_in">INT</span></span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span>;</span><br><span class="line"><span class="comment">#创建登录日志表</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">TABLE</span> t_login_log (</span><br><span class="line">      <span class="keyword">id</span> <span class="built_in">int</span> auto_increment PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">        user_id <span class="built_in">int</span>,</span><br><span class="line">        ip <span class="built_in">varchar</span>(<span class="number">23</span>),</span><br><span class="line">        login_datetime datetime</span><br><span class="line">)<span class="keyword">ENGINE</span>=<span class="keyword">INNODB</span>;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;忘记-root-密码&quot;&gt;&lt;a href=&quot;#忘记-root-密码&quot; class=&quot;headerlink&quot; title=&quot;忘记 root 密码&quot;&gt;&lt;/a&gt;忘记 root 密码&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;mysql server version : 5.
      
    
    </summary>
    
      <category term="系统配置" scheme="https://github.com/carl-zk/blog/categories/%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="MySQL" scheme="https://github.com/carl-zk/blog/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Median of Two Sorted Arrays</title>
    <link href="https://github.com/carl-zk/blog/2018/04/01/Median-of-Two-Sorted-Arrays/"/>
    <id>https://github.com/carl-zk/blog/2018/04/01/Median-of-Two-Sorted-Arrays/</id>
    <published>2018-04-01T03:32:59.000Z</published>
    <updated>2019-02-16T01:58:27.788Z</updated>
    
    <content type="html"><![CDATA[<p>我相信这道题肯定不是让用这种方法，但是块拷贝的确比分析情况简单多了。</p><p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p><p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p><p>Example 1:<br>nums1 = [1, 3]<br>nums2 = [2]</p><p>The median is 2.0<br>Example 2:<br>nums1 = [1, 2]<br>nums2 = [3, 4]</p><p>The median is (2 + 3)/2 = 2.5</p><p><a href="https://leetcode.com/problems/median-of-two-sorted-arrays/description/" target="_blank" rel="noopener">median-of-two-sorted-arrays</a><br><code>AC code</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len = nums1.length + nums2.length, mid = len &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">        System.arraycopy(nums1, <span class="number">0</span>, nums, <span class="number">0</span>, nums1.length);</span><br><span class="line">        System.arraycopy(nums2, <span class="number">0</span>, nums, nums1.length, nums2.length);</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">double</span> res = nums[mid];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (len % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            res += nums[mid - <span class="number">1</span>];</span><br><span class="line">            res /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我相信这道题肯定不是让用这种方法，但是块拷贝的确比分析情况简单多了。&lt;/p&gt;
&lt;p&gt;There are two sorted arrays nums1 and nums2 of size m and n respectively.&lt;/p&gt;
&lt;p&gt;Find the media
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://github.com/carl-zk/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Longest Substring No Repeat</title>
    <link href="https://github.com/carl-zk/blog/2018/04/01/Longest-Substring-no-Repeat/"/>
    <id>https://github.com/carl-zk/blog/2018/04/01/Longest-Substring-no-Repeat/</id>
    <published>2018-04-01T02:46:40.000Z</published>
    <updated>2019-02-16T01:58:27.788Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>没有所谓的水题，只有解题的思想够不够先进。</p></blockquote><p>Given a string, find the length of the longest substring without repeating characters.</p><p>Examples:<br>Given “abcabcbb”, the answer is “abc”, which the length is 3.<br>Given “bbbbb”, the answer is “b”, with the length of 1.<br>Given “pwwkew”, the answer is “wke”, with the length of 3. Note that the answer must be a substring, “pwke” is a subsequence and not a substring.</p><p>需要做两项工作：</p><ol><li>查字符是否与当前连续子串重复；</li><li>计算当前子串长度；</li></ol><p>用一个 HashMap&lt;char, int&gt; 来保存 &lt;字符, 字符所在位置下标&gt;，用 maxlen 来保存最长不重复子串长度，用 i 保存当前子串起始坐标，遍历字符串数组：</p><ol><li>根据 Integer loc = map.get(char), loc == null || loc &lt; i 来判断是否重复;</li><li>当重复时，子串长度不可能增加；当不重复时，更新最大长度 maxlen = max(maxlen, j-i+1);</li></ol><p><a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/description/" target="_blank" rel="noopener">Longest Substring Without Repeating Characters</a><br><code>AC code</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        HashMap&lt;Character, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">char</span>[] chars = s.toCharArray();</span><br><span class="line">        <span class="keyword">int</span> maxlen = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chars.length; j++) &#123;</span><br><span class="line">            Integer k = map.get(chars[j]);</span><br><span class="line">            <span class="keyword">if</span> (k == <span class="keyword">null</span> || k &lt; i) &#123;</span><br><span class="line">                maxlen = Math.max(maxlen, j - i + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                i = k + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            map.put(chars[j], j);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxlen;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;没有所谓的水题，只有解题的思想够不够先进。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Given a string, find the length of the longest substring without repeating charac
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://github.com/carl-zk/blog/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>Add Two Numbers</title>
    <link href="https://github.com/carl-zk/blog/2018/04/01/Add-Two-Numbers/"/>
    <id>https://github.com/carl-zk/blog/2018/04/01/Add-Two-Numbers/</id>
    <published>2018-03-31T17:25:04.000Z</published>
    <updated>2019-02-16T01:58:27.783Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>水题系列</p></blockquote><p>You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p><p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p><p>Example<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">Output: 7 -&gt; 0 -&gt; 8</span><br><span class="line">Explanation: 342 + 465 = 807.</span><br></pre></td></tr></table></figure></p><p>两个 list 相加，考虑进位即可。</p><p><a href="https://leetcode.com/problems/add-two-numbers/description/" target="_blank" rel="noopener">add-two-numbers</a><br><code>AC code</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">            <span class="function"><span class="keyword">public</span> ListNode <span class="title">addTwoNumbers</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (l1 == <span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">        <span class="keyword">if</span> (l2 == <span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> upper = <span class="number">0</span>;</span><br><span class="line">        ListNode list = <span class="keyword">new</span> ListNode(l1.val + l2.val), t = list;</span><br><span class="line">        <span class="keyword">if</span> (list.val &gt; <span class="number">9</span>) &#123;</span><br><span class="line">            list.val -= <span class="number">10</span>;</span><br><span class="line">            upper = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        l1 = l1.next;</span><br><span class="line">        l2 = l2.next;</span><br><span class="line">        <span class="keyword">while</span> (l1 != <span class="keyword">null</span> &amp;&amp; l2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> val = l1.val + l2.val + upper;</span><br><span class="line">            <span class="keyword">if</span> (val &gt; <span class="number">9</span>) &#123;</span><br><span class="line">                upper = <span class="number">1</span>;</span><br><span class="line">                val -= <span class="number">10</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                upper = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ListNode next = <span class="keyword">new</span> ListNode(val);</span><br><span class="line">            t.next = next;</span><br><span class="line">            t = next;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">            l2 = l2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        l1 = l1 == <span class="keyword">null</span> ? l2 : l1;</span><br><span class="line">        <span class="keyword">while</span> (l1 != <span class="keyword">null</span>) &#123;</span><br><span class="line">            l1.val += upper;</span><br><span class="line">            <span class="keyword">if</span> (l1.val &gt; <span class="number">9</span>) &#123;</span><br><span class="line">                upper = <span class="number">1</span>;</span><br><span class="line">                l1.val -= <span class="number">10</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                upper = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            t.next = l1;</span><br><span class="line">            t = l1;</span><br><span class="line">            l1 = l1.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (upper &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            t.next = <span class="keyword">new</span> ListNode(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;水题系列&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You are given two non-empty linked lists representing two non-negative integers. The digits are st
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://github.com/carl-zk/blog/tags/LeetCode/"/>
    
  </entry>
  
</feed>
